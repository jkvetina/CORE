prompt --application/deployment/install/install_install_views
begin
--   Manifest
--     INSTALL: INSTALL-INSTALL_VIEWS
--   Manifest End
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9014660246496943
,p_default_application_id=>770
,p_default_id_offset=>0
,p_default_owner=>'CORE'
);
wwv_flow_api.create_install_script(
 p_id=>wwv_flow_api.id(20442967958321458)
,p_install_id=>wwv_flow_api.id(12958699824624058)
,p_name=>'INSTALL_VIEWS'
,p_sequence=>20
,p_script_type=>'INSTALL'
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'CREATE OR REPLACE FORCE VIEW "DASHBOARD_OVERVIEW" ("WEEK", "TODAY", "COUNT_REQUESTS", "COUNT_ACTIONS", "COUNT_MODULES", "COUNT_DEBUGS", "COUNT_RESULTS", "COUNT_WARNINGS", "COUNT_ERRORS", "COUNT_LONGOPS", "COUNT_TRIGGERS", "COUNT_SESSIONS", "COUNT_USE'
||'RS", "COUNT_EVENTS", "COUNT_SUCCEEDED", "COUNT_FAILED", "ACTION") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                        AS app_id',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
's AS (',
'    SELECT',
'        TRUNC(s.created_at)                     AS today,',
'        NULLIF(COUNT(s.session_id), 0)          AS count_sessions,',
'        NULLIF(COUNT(DISTINCT s.user_id), 0)    AS count_users',
'    FROM sessions s',
'    JOIN x',
'        ON x.app_id = s.app_id',
'    GROUP BY TRUNC(s.created_at)',
'),',
'e AS (',
'    SELECT',
'        TRUNC(e.created_at)                     AS today,',
'        NULLIF(COUNT(e.event_id), 0)            AS count_events',
'    FROM log_events e',
'    JOIN x',
'        ON x.app_id = e.app_id',
'    GROUP BY TRUNC(e.created_at)',
'),',
'l AS (',
'    SELECT',
'        TRUNC(l.created_at)                                         AS today,',
'        NULLIF(SUM(CASE WHEN l.flag = ''P'' THEN 1 ELSE 0 END), 0)    AS count_requests,      -- must match APP specification',
'        NULLIF(SUM(CASE WHEN l.flag = ''A'' THEN 1 ELSE 0 END), 0)    AS count_actions,',
'        NULLIF(SUM(CASE WHEN l.flag = ''M'' THEN 1 ELSE 0 END), 0)    AS count_modules,',
'        NULLIF(SUM(CASE WHEN l.flag = ''D'' THEN 1 ELSE 0 END), 0)    AS count_debugs,',
'        NULLIF(SUM(CASE WHEN l.flag = ''R'' THEN 1 ELSE 0 END), 0)    AS count_results,',
'        NULLIF(SUM(CASE WHEN l.flag = ''W'' THEN 1 ELSE 0 END), 0)    AS count_warnings,',
'        NULLIF(SUM(CASE WHEN l.flag = ''E'' THEN 1 ELSE 0 END), 0)    AS count_errors,',
'        NULLIF(SUM(CASE WHEN l.flag = ''L'' THEN 1 ELSE 0 END), 0)    AS count_longops,',
'        NULLIF(SUM(CASE WHEN l.flag = ''G'' THEN 1 ELSE 0 END), 0)    AS count_triggers',
'    FROM logs l',
'    JOIN x',
'        ON x.app_id = l.app_id',
'    GROUP BY TRUNC(l.created_at)',
'),',
'j AS (',
'    SELECT',
'        TRUNC(d.actual_start_date)                                  AS today,',
'        COUNT(d.log_id)                                             AS count_succeeded,',
'        SUM(CASE WHEN d.status = ''SUCCEEDED'' THEN 0 ELSE 1 END)     AS count_failed',
'    FROM user_scheduler_job_run_details d',
'    WHERE d.actual_start_date >= TRUNC(SYSDATE) - 7',
'    GROUP BY TRUNC(d.actual_start_date)',
')',
'--',
'SELECT',
'    LPAD('' '', TO_NUMBER(TO_CHAR(l.today, ''IYIW'') - 2000)) || SUBSTR(TO_CHAR(l.today, ''YYYY''), 1, 2) || TO_CHAR(l.today, ''IY-IW'') AS week,',
'    --',
'    TO_CHAR(l.today, ''YYYY-MM-DD'') AS today,',
'    --',
'    l.count_requests,',
'    l.count_actions,',
'    l.count_modules,',
'    l.count_debugs,',
'    l.count_results,',
'    l.count_warnings,',
'    l.count_errors,',
'    l.count_longops,',
'    l.count_triggers,',
'    --',
'    s.count_sessions,',
'    s.count_users,',
'    e.count_events,',
'    --',
'    NULLIF(j.count_succeeded - j.count_failed, 0)       AS count_succeeded,',
'    NULLIF(j.count_failed, 0)                           AS count_failed,',
'    --',
'    app.get_icon(''fa-trash-o'', ''Delete related logs'')   AS action',
'FROM l',
'LEFT JOIN s ON s.today = l.today',
'LEFT JOIN e ON e.today = l.today',
'LEFT JOIN j ON j.today = l.today;',
'',
'CREATE OR REPLACE FORCE VIEW "EVENTS_CHART" ("BUCKET_ID", "CHART_LABEL", "COUNT_EVENTS") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                        AS app_id,',
'        app.get_item(''$EVENT_ID'')               AS event_id,',
'        app.get_item(''$USER_ID'')                AS user_id,',
'        TRUNC(app.get_date_item(''G_TODAY''))     AS today',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'z AS (',
'    SELECT',
'        LEVEL                                                           AS bucket_id,',
'        TRUNC(SYSDATE) + NUMTODSINTERVAL((LEVEL - 1) * 10, ''MINUTE'')    AS start_at,',
'        TRUNC(SYSDATE) + NUMTODSINTERVAL( LEVEL      * 10, ''MINUTE'')    AS end_at',
'    FROM DUAL',
'    CONNECT BY LEVEL <= (1440 / 10)',
')',
'SELECT',
'    z.bucket_id,',
'    TO_CHAR(z.start_at, ''HH24:MI'')              AS chart_label,',
'    NULLIF(COUNT(e.event_id), 0)                AS count_events',
'FROM z',
'CROSS JOIN x',
'LEFT JOIN log_events e',
'    ON e.app_id         = x.app_id',
'    AND e.created_at    >= x.today',
'    AND e.created_at    < x.today + 1',
'    AND e.event_id      = NVL(x.event_id, e.event_id)',
'    AND e.user_id       = NVL(x.user_id, e.user_id)',
'    AND z.bucket_id     = app.get_time_bucket(e.created_at, 10)',
'GROUP BY z.bucket_id, TO_CHAR(z.start_at, ''HH24:MI'');',
'',
'CREATE OR REPLACE FORCE VIEW "GRANTS_OBJECTS" ("PRIVILEGE", "ROLE", "USER_ID", "OWNER", "OBJECT_NAME", "OBJECT_TYPE", "IS_INHERITED", "IS_GRANTABLE", "GRANTOR") AS ',
'  SELECT',
'    r.privilege,',
'    r.role,',
'    NULL                AS user_id,',
'    r.owner,',
'    r.table_name        AS object_name,',
'    NULL                AS object_type,',
'    --',
'    CASE WHEN r.inherited = ''YES''   THEN ''Y'' END AS is_inherited,',
'    CASE WHEN r.grantable = ''YES''   THEN ''Y'' END AS is_grantable,',
'    --',
'    NULL                AS grantor',
'FROM role_tab_privs r',
'UNION ALL',
'--',
'SELECT',
'    u.privilege,',
'    NULL                AS role,',
'    u.grantee           AS user_id,',
'    u.owner,',
'    u.table_name        AS object_name,',
'    u.type              AS object_type,',
'    --',
'    CASE WHEN u.inherited = ''YES''   THEN ''Y'' END AS is_inherited,',
'    CASE WHEN u.grantable = ''YES''   THEN ''Y'' END AS is_grantable,',
'    --',
'    u.grantor',
'FROM user_tab_privs u;',
'',
'CREATE OR REPLACE FORCE VIEW "GRANTS_PRIVILEGES" ("PRIVILEGE", "ROLE", "USER_ID", "IS_ACTIVE", "IS_INHERITED", "IS_ADMIN_OPTION") AS ',
'  SELECT',
'    r.privilege,',
'    r.role,',
'    NULL                AS user_id,',
'    --',
'    CASE WHEN s.privilege IS NOT NULL   THEN ''Y'' END AS is_active,',
'    CASE WHEN r.inherited = ''YES''       THEN ''Y'' END AS is_inherited,',
'    CASE WHEN r.admin_option = ''YES''    THEN ''Y'' END AS is_admin_option',
'FROM role_sys_privs r',
'LEFT JOIN session_privs s',
'    ON s.privilege      = r.privilege',
'UNION ALL',
'--',
'SELECT',
'    u.privilege,',
'    NULL                AS role,',
'    u.username          AS user_id,',
'    --',
'    CASE WHEN s.privilege IS NOT NULL   THEN ''Y'' END AS is_active,',
'    CASE WHEN u.inherited = ''YES''       THEN ''Y'' END AS is_inherited,',
'    CASE WHEN u.admin_option = ''YES''    THEN ''Y'' END AS is_admin_option',
'FROM user_sys_privs u',
'LEFT JOIN session_privs s',
'    ON s.privilege      = u.privilege;',
'',
'CREATE OR REPLACE FORCE VIEW "LOGS_OVERVIEW" ("LOG_ID", "LOG_PARENT", "APP_ID", "PAGE_ID", "USER_ID", "FLAG", "ACTION_NAME", "MODULE_NAME", "MODULE_LINE", "MODULE_TIMER", "ARGUMENTS", "PAYLOAD", "SESSION_ID", "CREATED_AT") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                AS app_id,',
'        app.get_item(''$RECENT_LOG_ID'')  AS recent_log_id,',
'        app.get_item(''$FLAG'')           AS flag,',
'        app.get_item(''$PAGE_ID'')        AS page_id,',
'        app.get_item(''$USER_ID'')        AS user_id,',
'        app.get_item(''$SESSION_ID'')     AS session_id,',
'        app.get_item(''$MODULE_NAME'')    AS module_name,',
'        app.get_item(''$ACTION_NAME'')    AS action_name,',
'        app.get_date_item(''G_TODAY'')    AS today',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT',
'    l.log_id,',
'    l.log_parent,',
'    l.app_id,',
'    l.page_id,',
'    l.user_id,',
'    l.flag,',
'    l.action_name,',
'    l.module_name,',
'    l.module_line,',
'    l.module_timer,',
'    l.arguments,',
'    l.payload,',
'    l.session_id,',
'    l.created_at',
'FROM logs l',
'JOIN x',
'    ON l.created_at     >= x.today',
'    AND l.created_at    < x.today + 1',
'    AND l.app_id        = x.app_id',
'    AND l.log_id        > NVL(x.recent_log_id, 0)',
'    AND l.flag          = NVL(x.flag, l.flag)',
'    AND l.page_id       = NVL(x.page_id, l.page_id)',
'    AND l.user_id       = NVL(x.user_id, l.user_id)',
'    AND l.session_id    = NVL(x.session_id, l.session_id)',
'    AND (l.module_name  = NVL(x.module_name, l.module_name) OR (l.module_name IS NULL AND x.module_name IS NULL))',
'    AND (l.action_name  = NVL(x.action_name, l.action_name) OR (l.action_name IS NULL AND x.action_name IS NULL));',
'',
'CREATE OR REPLACE FORCE VIEW "LOGS_TREE" ("LOG_ID", "LOG_PARENT", "APP_ID", "PAGE_ID", "USER_ID", "FLAG", "ACTION_NAME", "MODULE_NAME", "MODULE_LINE", "MODULE_TIMER", "ARGUMENTS", "PAYLOAD", "SESSION_ID", "CREATED_AT") AS ',
'  SELECT',
'    l.log_id,',
'    l.log_parent,',
'    l.app_id,',
'    l.page_id,',
'    l.user_id,',
'    l.flag,',
'    l.action_name,',
'    LPAD('' '', (LEVEL - 1) * 6) || l.module_name AS module_name,',
'    l.module_line,',
'    l.module_timer,',
'    l.arguments,',
'    l.payload,',
'    l.session_id,',
'    l.created_at',
'FROM logs l',
'CONNECT BY l.log_parent = PRIOR l.log_id',
'START WITH l.log_id     = app.get_log_tree_id()',
'    AND l.app_id        = app.get_app_id()',
'ORDER SIBLINGS BY l.log_id;',
'',
'CREATE OR REPLACE FORCE VIEW "NAV_BADGES" ("PAGE_ID", "PAGE_ALIAS", "BADGE") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()            AS app_id,',
'        app.is_developer_y()        AS is_developer',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT                              -- today errors on dashboard',
'    900                             AS page_id,',
'    '' ''                             AS page_alias,',
'    TO_CHAR(NULLIF(COUNT(*), 0))    AS badge',
'FROM logs l',
'JOIN x',
'    ON x.is_developer       = ''Y''',
'WHERE l.created_at          >= TRUNC(SYSDATE)',
'    AND l.flag              = ''E''',
'    AND l.app_id            = x.app_id',
'--',
'UNION ALL',
'SELECT                              -- today users',
'    915 AS page_id,',
'    '' '' AS page_alias,',
'    --',
'    TO_CHAR(NULLIF(COUNT(DISTINCT s.user_id), 0)) AS badge',
'FROM sessions s',
'JOIN x',
'    ON x.is_developer       = ''Y''',
'WHERE s.created_at          >= TRUNC(SYSDATE)',
'    AND s.app_id            = x.app_id',
'--',
'UNION ALL',
'SELECT                              -- pages to add/remove',
'    910 AS page_id,',
'    '' '' AS page_alias,',
'    --',
'    TO_CHAR(NULLIF(COUNT(*), 0))    AS badge',
'FROM nav_overview n',
'JOIN x',
'    ON x.is_developer       = ''Y''',
'WHERE n.app_id              = x.app_id',
'    AND n.action            IS NOT NULL',
'--',
'UNION ALL',
'SELECT                              -- running jobs',
'    905 AS page_id,',
'    '' '' AS page_alias,',
'    --',
'    TO_CHAR(NULLIF(COUNT(*), 0))    AS badge',
'FROM user_scheduler_running_jobs j',
'--',
'UNION ALL',
'SELECT                              -- invalid objects',
'    950 AS page_id,',
'    '' '' AS page_alias,',
'    --',
'    TO_CHAR(NULLIF(COUNT(*), 0))    AS badge',
'FROM user_objects o',
'WHERE o.status              != ''VALID'';',
'',
'CREATE OR REPLACE FORCE VIEW "NAV_OVERVIEW" ("APP_ID", "PAGE_ID", "PARENT_ID", "ORDER#", "PAGE_GROUP", "PAGE_ALIAS", "PAGE_NAME", "PAGE_TITLE", "CSS_CLASS", "PAGE_TEMPLATE", "IS_MODAL", "IS_HIDDEN", "IS_RESET", "IS_SHARED", "AUTH_SCHEME", "PAGE_URL",'
||' "ALLOW_CHANGES", "SORT_ORDER", "ACTION", "ACTION_URL") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_page_id()           AS page_id,',
'        app.get_app_id()            AS app_id,',
'        app.get_core_app_id()       AS core_app_id',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
't AS (',
'    SELECT',
'        ROWNUM AS r#,   -- to keep hierarchy sorted',
'        t.*',
'    FROM (',
'        SELECT',
'            n.app_id,',
'            n.page_id,',
'            n.order#,',
'            --',
'            REPLACE(p.page_name,  ''&'' || ''APP_NAME.'', a.application_name) AS page_name,',
'            REPLACE(p.page_title, ''&'' || ''APP_NAME.'', a.application_name) AS page_title,',
'            --',
'            p.page_alias,',
'            p.page_group,',
'            p.authorization_scheme,',
'            p.page_css_classes,',
'            p.page_mode,',
'            p.page_template,',
'            --',
'            LEVEL - 1                                   AS depth,',
'            CONNECT_BY_ROOT NVL(n.order#, n.page_id)    AS page_root',
'        FROM navigation n',
'        JOIN apps a',
'            ON a.app_id                 = n.app_id',
'            AND a.is_active             = ''Y''',
'        CROSS JOIN x',
'        LEFT JOIN apex_application_pages p',
'            ON p.application_id         = n.app_id',
'            AND p.page_id               = n.page_id',
'        LEFT JOIN apex_applications a',
'            ON a.application_id         = p.application_id',
'        CONNECT BY n.parent_id          = PRIOR n.page_id',
'            AND n.app_id                = PRIOR n.app_id',
'        START WITH n.parent_id          IS NULL',
'        ORDER SIBLINGS BY n.app_id, n.order#, n.page_id',
'    ) t',
')',
'SELECT',
'    n.app_id,',
'    n.page_id,',
'    n.parent_id,',
'    n.order#,',
'    --',
'    t.page_root || '' '' || COALESCE (',
'        t.page_group,',
'        (',
'            SELECT t.page_group',
'            FROM t',
'            WHERE t.app_id      = n.app_id',
'                AND t.page_id   = n.parent_id',
'        )',
'    ) AS page_group,',
'    --',
'    t.page_alias,',
'    --',
'    CASE WHEN r.page_id IS NULL',
'        THEN REPLACE(LTRIM(RPAD(''-'', t.depth * 4), ''-''), '' '', ''&'' || ''nbsp; '') ||',
'            app.get_page_name (',
'                in_app_id       => n.app_id,',
'                in_page_id      => n.page_id,',
'                in_name         => t.page_name',
'            )',
'        END AS page_name,',
'    --',
'    t.page_title,',
'    t.page_css_classes AS css_class,',
'    t.page_template,',
'    --',
'    CASE WHEN t.page_mode = ''Normal'' THEN NULL ELSE ''Y'' END AS is_modal,',
'    n.is_hidden,',
'    n.is_reset,',
'    n.is_shared,',
'    --',
'    CASE',
'        WHEN t.authorization_scheme LIKE ''%MUST_NOT_BE_PUBLIC_USER%''',
'            THEN app.get_icon(''fa-check-square'', ''MUST_NOT_BE_PUBLIC_USER'')',
'        WHEN t.authorization_scheme IS NULL AND n.page_id NOT IN (0, 9999)',
'            THEN app.get_icon(''fa-warning'', ''Auth scheme is missing'')',
'        ELSE ''<a href="'' || app.get_page_link (',
'            in_page_id      => 920,',
'            in_app_id       => n.app_id,',
'            in_names        => ''P920_AUTH_SCHEME'',',
'            in_values       => t.authorization_scheme',
'        ) || ''">'' || t.authorization_scheme || ''</a>''',
'        END AS auth_scheme,',
'    --',
'    CASE WHEN n.page_id > 0 AND r.page_id IS NULL',
'        THEN app.get_page_link (',
'            in_page_id      => n.page_id,',
'            in_app_id       => n.app_id,',
'            in_session_id   => CASE WHEN n.page_id = 9999 THEN 0 END',
'        )',
'        END AS page_url,',
'    --',
'    ''UD'' AS allow_changes,  -- U = update, D = delete',
'    --',
'    t.page_root || ''.'' || TO_CHAR(10000 + t.r#) || ''.'' || NVL(t.order#, t.page_id) || ''.'' || n.page_id AS sort_order,',
'    --',
'    CASE',
'        WHEN r.page_id IS NOT NULL',
'            THEN app.get_icon(''fa-minus-square'', ''Remove record from Navigation table'')',
'        END AS action,',
'    --',
'    app.get_page_link (',
'        in_page_id          => x.page_id,',
'        in_app_id           => x.core_app_id,',
'        in_names            => ''P'' || TO_CHAR(x.page_id) || ''_REMOVE_PAGE'',',
'        in_values           => TO_CHAR(n.page_id)',
'    ) AS action_url',
'FROM navigation n',
'JOIN apps a',
'    ON a.app_id             = n.app_id',
'    AND a.is_active         = ''Y''',
'CROSS JOIN x',
'LEFT JOIN t',
'    ON t.app_id             = n.app_id',
'    AND t.page_id           = n.page_id',
'LEFT JOIN nav_pages_to_remove r',
'    ON r.page_id            = n.page_id',
'WHERE (',
'    n.app_id            = x.app_id',
'    OR (',
'        n.is_shared     = ''Y''',
'        AND n.page_id   NOT IN (',
'            -- pages from active apps takes priority',
'            SELECT n.page_id',
'            FROM navigation n',
'            WHERE n.app_id      = x.app_id',
'        )',
'    )',
')',
'--',
'UNION ALL',
'SELECT',
'    n.app_id,',
'    n.page_id,',
'    n.parent_id,',
'    n.order#,',
'    NVL(t.page_root, n.page_id) || '' '' || n.page_group AS page_group,',
'    n.page_alias,',
'    --',
'    CASE WHEN n.parent_id IS NOT NULL',
'        THEN REPLACE(LTRIM(RPAD(''-'', (t.depth + 1) * 4), ''-''), '' '', ''&'' || ''nbsp; '')',
'        END || app.get_page_name(in_app_id => n.app_id, in_page_id => n.page_id, in_name => n.page_name) AS page_name,',
'    --',
'    n.page_title,',
'    n.css_class,',
'    n.page_template,',
'    --',
'    CASE WHEN n.page_mode = ''Normal'' THEN NULL ELSE ''Y'' END AS is_modal,',
'    n.is_hidden,',
'    n.is_reset,',
'    n.is_shared,',
'    --',
'    CASE WHEN n.auth_scheme LIKE ''%MUST_NOT_BE_PUBLIC_USER%''',
'        THEN app.get_icon(''fa-check-square'', ''MUST_NOT_BE_PUBLIC_USER'')',
'        ELSE n.auth_scheme',
'        END AS auth_scheme,',
'    --',
'    app.get_page_link (',
'        in_page_id      => n.page_id,',
'        in_app_id       => n.app_id',
'    ) AS page_url,',
'    --',
'    NULL AS allow_changes,  -- no changes allowed',
'    --',
'    NVL(t.page_root, n.page_id) || ''.'' || TO_CHAR(10000 + (',
'        SELECT NVL(MAX(z.r#), 0) AS nearest_r#',
'        FROM t z',
'        WHERE z.app_id          = n.app_id',
'            AND z.page_group    = n.page_group',
'            AND z.order#        = n.order#',
'    )) || ''.'' || NVL(n.order#, n.page_id) AS sort_order,',
'    --',
'    app.get_icon(''fa-plus-square'', ''Create record in Navigation table'') AS action,',
'    --',
'    app.get_page_link (',
'        in_page_id         => x.page_id,',
'        in_app_id          => x.core_app_id,',
'        in_names           => ''P'' || TO_CHAR(x.page_id) || ''_ADD_PAGE'',',
'        in_values          => TO_CHAR(n.page_id)',
'    ) AS action_url',
'FROM nav_pages_to_add n',
'JOIN apps a',
'    ON a.app_id             = n.app_id',
'    AND a.is_active         = ''Y''',
'CROSS JOIN x',
'LEFT JOIN t',
'    ON t.app_id             = n.app_id',
'    AND t.page_id           = n.parent_id;',
'',
'CREATE OR REPLACE FORCE VIEW "NAV_PAGES_TO_ADD" ("APP_ID", "PAGE_ID", "PARENT_ID", "PAGE_ALIAS", "PAGE_NAME", "PAGE_TITLE", "ORDER#", "CSS_CLASS", "PAGE_TEMPLATE", "PAGE_MODE", "IS_HIDDEN", "IS_RESET", "IS_SHARED", "PAGE_GROUP", "PAGE_LINK", "AUTH_SC'
||'HEME") AS ',
'  WITH g AS (',
'    SELECT',
'        p.page_group,',
'        n.page_id,',
'        n.parent_id,',
'        n.order#,',
'        p.page_mode',
'    FROM navigation n',
'    JOIN apex_application_pages p',
'        ON p.application_id     = n.app_id',
'        AND p.page_id           = n.page_id',
'    WHERE n.app_id              = app.get_app_id()',
')',
'SELECT',
'    p.application_id AS app_id,',
'    p.page_id,',
'    --',
'    (',
'        SELECT COALESCE (',
'                MAX((',
'                    SELECT MAX(g.page_id) AS nearest_page',
'                    FROM g',
'                    WHERE g.page_id         < p.page_id',
'                        AND g.page_group    = p.page_group',
'                        AND g.page_mode     = ''Normal''',
'                        AND p.page_mode     != ''Normal''',
'                )),',
'                MAX(CASE WHEN g.parent_id IS NULL THEN g.page_id END),',
'                MIN(g.page_id)',
'            ) AS parent_id',
'        FROM g',
'        WHERE g.page_group      = p.page_group',
'    ) AS parent_id,',
'    --',
'    p.page_alias,',
'    p.page_name,',
'    p.page_title,',
'    --',
'    COALESCE (',
'        CASE p.page_id',
'            WHEN 0      THEN 599    -- preferred order',
'            WHEN 9999   THEN 999',
'            END,',
'        (',
'            SELECT MAX(g.order#) AS order#',
'            FROM g',
'            WHERE g.page_group      = p.page_group',
'                AND g.page_id       < p.page_id',
'                AND g.parent_id     IN (',
'                    SELECT MAX(g.parent_id) AS parent_id',
'                    FROM g',
'                    WHERE g.page_group      = p.page_group',
'                        AND g.page_id       < p.page_id',
'                        AND g.parent_id     IS NOT NULL',
'                )',
'    ',
'        ),',
'        CASE WHEN MOD(p.page_id, 100) = 0 THEN p.page_id END',
'    ) AS order#,',
'    --',
'    p.page_css_classes      AS css_class,',
'    p.page_template,',
'    p.page_mode,',
'    --',
'    CASE WHEN p.page_mode != ''Normal'' THEN ''Y'' END AS is_hidden,    -- hide page on default, except for modals',
'    --',
'    ''Y''                     AS is_reset,        -- reset page items',
'    NULL                    AS is_shared,',
'    --',
'    p.page_group,',
'    p.page_id               AS page_link,',
'    p.authorization_scheme  AS auth_scheme',
'FROM apex_application_pages p',
'LEFT JOIN navigation n',
'    ON n.app_id             = p.application_id',
'    AND n.page_id           = p.page_id',
'WHERE p.application_id      = app.get_app_id()',
'    AND n.page_id           IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "NAV_PAGES_TO_REMOVE" ("PAGE_ID") AS ',
'  SELECT n.page_id',
'FROM navigation n',
'LEFT JOIN apex_application_pages p',
'    ON p.application_id     = n.app_id',
'    AND p.page_id           = n.page_id',
'WHERE n.app_id              = app.get_app_id()',
'    AND p.application_id    IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "NAV_REGIONS" ("PAGE_GROUP", "PAGE_ID", "REGION_ICON", "REGION_NAME", "TEMPLATE", "STATIC_ID", "TABLE_NAME", "TABLE_LINK", "FIX_SETUP", "FIX_SYNC", "FIX_HANDLER", "IS_INS_ALLOWED", "IS_UPD_ALLOWED", "IS_DEL_ALLOWED", "ITE'
||'MS", "BUTTONS", "IS_WHERE_CLAUSE", "IS_CONDITIONAL", "TARGET_TYPE", "TARGET_NAME", "IS_GRID_BUTTON", "IS_GRID_CONDITIONAL", "DISPLAY_SEQUENCE", "QUERY_TYPE_CODE", "AUTHORIZATION_SCHEME") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$PAGE_ID'')        AS page_id,',
'        app.get_item(''$AUTH_SCHEME'')    AS auth_scheme,',
'        a.app_id',
'    FROM users u',
'    JOIN apps a',
'        ON a.app_id         = app.get_app_id()',
'    WHERE u.user_id         = app.get_user_id()',
'),',
'c AS (',
'    SELECT',
'        r.region_id,',
'        c.table_name,',
'        --c.data_length, c.nullable',
'        c.column_name,',
'        --',
'        CASE REGEXP_REPLACE(c.data_type, ''\(\d+\)'', '''')',
'            WHEN ''CHAR''                     THEN ''VARCHAR2''',
'            WHEN ''INTERVAL DAY TO SECOND''   THEN ''INTERVAL_D2S''',
'            WHEN ''TIMESTAMP WITH TIME ZONE'' THEN ''TIMESTAMP_TZ''',
'            ELSE REGEXP_REPLACE(c.data_type, ''\(\d+\)'', '''')',
'            END AS data_type',
'    FROM user_tab_cols c',
'    JOIN apex_application_page_regions r',
'        ON r.table_name             = c.table_name',
'    JOIN x',
'        ON x.app_id                 = r.application_id',
'    WHERE r.source_type_code        = ''NATIVE_IG''',
'        AND r.query_type_code       = ''TABLE''',
'),',
'b AS (',
'    SELECT',
'        c.region_id,',
'        r.table_name,',
'        --c.max_length, c.is_required,',
'        c.source_expression         AS column_name,',
'        c.data_type',
'    FROM apex_appl_page_ig_columns c',
'    JOIN apex_application_page_regions r',
'        ON r.application_id         = c.application_id',
'        AND r.region_id             = c.region_id',
'    JOIN x',
'        ON x.app_id                 = r.application_id',
'    WHERE r.source_type_code        = ''NATIVE_IG''',
'        AND r.query_type_code       = ''TABLE''',
'        AND c.source_type_code      = ''DB_COLUMN''',
'        AND c.data_type             NOT IN (''ROWID'')',
'),',
'd AS (',
'    SELECT',
'        NVL(c.region_id, b.region_id)       AS region_id,',
'        NVL(c.table_name, b.table_name)     AS table_name,',
'        --',
'        LISTAGG(CASE',
'            WHEN c.table_name IS NULL THEN ''Removed ''   || b.column_name || '' ('' || b.data_type || '')''',
'            WHEN b.table_name IS NULL THEN ''Added ''     || c.column_name || '' ('' || c.data_type || '')''',
'            ELSE ''Changed '' || b.column_name || '' from '' || b.data_type || '' to '' || c.data_type',
'            END, CHR(10)) WITHIN GROUP (ORDER BY b.column_name, c.column_name) AS fix_sync',
'    FROM b',
'    FULL JOIN c',
'        ON c.region_id              = b.region_id',
'        AND c.table_name            = b.table_name',
'        AND c.column_name           = b.column_name',
'    WHERE NVL(c.data_type, ''-'')     != NVL(b.data_type, ''-'')',
'    GROUP BY NVL(c.region_id, b.region_id), NVL(c.table_name, b.table_name)',
')',
'SELECT',
'    p.page_group || '' '' || r.page_id || '' '' || p.page_title AS page_group,',
'    r.page_id,',
'    --r.region_id,',
'    --',
'    CASE WHEN r.icon_css_classes IS NOT NULL THEN app.get_icon(r.icon_css_classes) END AS region_icon,',
'    --',
'    CASE',
'        WHEN r.template != ''Hero''',
'            THEN REPLACE(RPAD('' '', 3), '' '', ''&'' || ''nbsp; '')',
'            END || r.region_name AS region_name,',
'    --',
'    --r.parent_region_id,',
'    --r.source_type,',
'    --r.source_type_code,',
'    --',
'    CASE',
'        WHEN r.source_type_code = ''NATIVE_IG''',
'            THEN r.source_type',
'            ELSE r.template',
'            END AS template,',
'    --',
'    CASE',
'        WHEN r.source_type_code = ''NATIVE_IG'' AND r.static_id IS NULL',
'            THEN app.get_icon(''fa-warning'')',
'            ELSE r.static_id',
'            END AS static_id,',
'    --',
'    CASE',
'        WHEN r.query_type_code = ''SQL''',
'            THEN app.get_icon(''fa-warning'')',
'            ELSE r.table_name',
'            END AS table_name,',
'    --',
'    app.get_page_link (',
'        in_page_id => CASE',
'            WHEN t.object_type = ''TABLE'' THEN 951',
'            WHEN t.object_type = ''VIEW''  THEN 955',
'            END,',
'        in_names => CASE',
'            WHEN t.object_type = ''TABLE'' THEN ''P951_TABLE_NAME''',
'            WHEN t.object_type = ''VIEW''  THEN ''P955_VIEW_NAME''',
'            END,',
'        in_values => r.table_name',
'    ) AS table_link,',
'    --',
'    CASE',
'        WHEN r.source_type_code != ''NATIVE_IG''',
'            THEN NULL',
'        WHEN NVL(g.add_row_if_empty, ''No'')  = ''No''',
'            AND g.select_first_row          = ''No''',
'            AND g.pagination_type           = ''Page''',
'            AND g.show_total_row_count      = ''Yes''',
'            AND g.toolbar_buttons           = ''SEARCH_COLUMN:SEARCH_FIELD:ACTIONS_MENU:SAVE''',
'            --',
'            AND REGEXP_REPLACE(g.javascript_code, ''\s+'', '' '') LIKE ''function(config) { return unified_ig_toolbar(config%''',
'        THEN NULL',
'        ELSE app.get_icon(''fa-warning'', RTRIM (',
'                CASE WHEN NVL(g.add_row_if_empty, ''No'') = ''No''      THEN NULL ELSE ''ADD_ROW_IF_EMPTY, ''     END ||',
'                CASE WHEN g.select_first_row            = ''No''      THEN NULL ELSE ''SELECT_FIRST_ROW, ''     END ||',
'                CASE WHEN g.pagination_type             = ''Page''    THEN NULL ELSE ''PAGINATION_TYPE, ''      END ||',
'                CASE WHEN g.show_total_row_count        = ''Yes''     THEN NULL ELSE ''SHOW_TOTAL_ROW_COUNT, '' END ||',
'                --',
'                CASE WHEN REGEXP_REPLACE(g.javascript_code, ''\s+'', '' '') LIKE ''function(config) { return unified_ig_toolbar(config%'' THEN NULL ELSE ''JAVASCRIPT_CODE'' END,',
'            '', ''))',
'        END AS fix_setup,',
'    --',
'    CASE WHEN d.fix_sync IS NOT NULL THEN app.get_icon(''fa-warning'', d.fix_sync) END AS fix_sync,',
'    --',
'    CASE',
'        WHEN r.source_type_code     != ''NATIVE_IG''',
'            THEN NULL',
'        WHEN r.source_type_code     = ''NATIVE_IG''',
'            AND g.is_editable       = ''No''',
'            THEN NULL',
'        WHEN r.source_type_code     = ''NATIVE_IG''',
'            AND s.process_name      = ''SAVE_'' || r.static_id',
'            AND s.process_type_code = ''NATIVE_IG_DML''',
'            AND s.attribute_06      = ''N''   -- lock_row',
'            THEN NULL',
'        ELSE app.get_icon(''fa-warning'', RTRIM (',
'                CASE WHEN r.source_type_code    = ''NATIVE_IG''               THEN NULL ELSE ''SOURCE_TYPE, ''  END ||',
'                CASE WHEN s.process_name        = '' SAVE_'' || r.static_id   THEN NULL ELSE ''PROCESS_NAME, '' END ||',
'                CASE WHEN s.process_type_code   = ''NATIVE_IG_DML''           THEN NULL ELSE ''PROCESS_TYPE, '' END ||',
'                CASE WHEN s.attribute_06        = ''N''                       THEN NULL ELSE ''LOCK_ROW, ''     END,',
'            '', ''))',
'        END AS fix_handler,',
'    --',
'    CASE WHEN g.edit_operations LIKE ''%i%'' THEN ''Y'' END AS is_ins_allowed,',
'    CASE WHEN g.edit_operations LIKE ''%u%'' THEN ''Y'' END AS is_upd_allowed,',
'    CASE WHEN g.edit_operations LIKE ''%d%'' THEN ''Y'' END AS is_del_allowed,',
'    --',
'    NULLIF(r.items, 0)              AS items,',
'    NULLIF(r.buttons, 0)            AS buttons,',
'    --',
'    CASE WHEN r.where_clause        IS NOT NULL THEN ''Y'' END AS is_where_clause,',
'    CASE WHEN r.condition_type_code IS NOT NULL THEN ''Y'' END AS is_conditional,',
'    --',
'    s.attribute_01      AS target_type,',
'    s.attribute_03      AS target_name,',
'    --',
'    CASE',
'        WHEN r.source_type_code         = ''NATIVE_IG''',
'            AND s.when_button_pressed   IS NOT NULL',
'            THEN ''Y'' END AS is_grid_button,',
'    --',
'    CASE',
'        WHEN r.source_type_code         = ''NATIVE_IG''',
'            AND s.condition_type_code   IS NOT NULL     -- s.condition_expression1',
'            THEN ''Y'' END AS is_grid_conditional,',
'    --',
'    r.display_sequence,',
'    r.query_type_code,',
'    r.authorization_scheme',
'FROM apex_application_page_regions r',
'JOIN apex_application_pages p',
'    ON p.application_id         = r.application_id',
'    AND p.page_id               = r.page_id',
'CROSS JOIN x',
'LEFT JOIN user_objects t',
'    ON t.object_name            = r.table_name',
'    AND t.object_type           IN (''TABLE'', ''VIEW'')',
'LEFT JOIN apex_appl_page_igs g',
'    ON g.application_id         = r.application_id',
'    AND g.region_id             = r.region_id',
'LEFT JOIN d',
'    ON d.region_id              = r.region_id',
'LEFT JOIN apex_application_page_proc s',
'    ON s.application_id         = g.application_id',
'    AND s.region_id             = g.region_id',
'    AND s.process_point_code    = ''AFTER_SUBMIT''',
'WHERE r.application_id          = x.app_id',
'    AND r.parent_region_id      IS NULL',
'    AND (x.page_id              = p.page_id OR x.page_id IS NULL)',
'    AND (x.auth_scheme          = r.authorization_scheme OR x.auth_scheme IS NULL);',
'',
'CREATE OR REPLACE FORCE VIEW "NAV_TOP" ("LVL", "LABEL", "TARGET", "IS_CURRENT_LIST_ENTRY", "IMAGE", "IMAGE_ATTRIBUTE", "IMAGE_ALT_ATTRIBUTE", "ATTRIBUTE01", "ATTRIBUTE02", "ATTRIBUTE03", "ATTRIBUTE04", "ATTRIBUTE05", "ATTRIBUTE06", "ATTRIBUTE07", "AT'
||'TRIBUTE08", "ATTRIBUTE09", "ATTRIBUTE10", "PAGE_GROUP", "SORT_ORDER") AS ',
'  WITH curr AS (',
'    SELECT',
'        app.get_app_id()            AS app_id,',
'        app.get_page_id()           AS page_id,',
'        app.get_page_parent()       AS parent_id,',
'        app.ge'))
);
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9014660246496943
,p_default_application_id=>770
,p_default_id_offset=>0
,p_default_owner=>'CORE'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(20442967958321458)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
't_page_root()         AS page_root,',
'        app.get_page_group()        AS page_group,',
'        app.get_user_id()           AS user_id,',
'        app.get_user_name()         AS user_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT',
'    CASE WHEN n.parent_id IS NULL THEN 1 ELSE 2 END AS lvl,',
'    --',
'    CASE',
'        WHEN n.page_id = 100  -- home page',
'            THEN REPLACE(n.page_name, ''&'' || ''ENV_NAME.'', app.get_env_name() || '' &'' || ''nbsp; '')',
'        WHEN n.page_id > 0',
'            THEN REGEXP_REPLACE(REPLACE(n.page_name, ''&'' || ''APP_USER.'', APEX_ESCAPE.HTML(NVL(curr.user_name, curr.user_id))), ''^(&'' || ''nbsp; )+'', '''')',
'        ELSE ''</li></ul><ul class="EMPTY"></ul><ul><li style="display: none;">''  -- a trick to split nav menu to left and right',
'        END AS label,',
'    --',
'    CASE',
'        WHEN n.page_id > 0',
'            THEN APEX_PAGE.GET_URL (',
'                p_application   => n.app_id,',
'                p_page          => NVL(n.page_alias, TO_CHAR(n.page_id)),',
'                p_clear_cache   => CASE WHEN n.is_reset = ''Y'' THEN n.page_id END,',
'                p_session       => CASE WHEN n.page_id != 9999 THEN app.get_session_id() ELSE 0 END',
'            )',
'        ELSE NVL(n.page_url, ''#'')',
'        END AS target,',
'    --',
'    CASE        ',
'        WHEN n.page_id IN (curr.page_id, curr.parent_id, curr.page_root) THEN ''YES''',
'        END AS is_current_list_entry,',
'    --',
'    NULL AS image,',
'    NULL AS image_attribute,',
'    NULL AS image_alt_attribute,',
'    --',
'    CASE',
'        WHEN n.page_id > 0',
'            THEN n.page_group || '' '' || n.css_class',
'            ELSE ''HIDDEN''',
'        END AS attribute01,',
'    --',
'    NULL AS attribute02,                        -- prepend link with element',
'    --',
'    CASE',
'        WHEN n.page_id = 0',
'            THEN ''HIDDEN" style="display: none;''',
'        END AS attribute03,                     -- a.class',
'    --',
'    CASE',
'        WHEN n.page_id = 9999',
'            THEN ''Logout''',
'            ELSE n.page_title',
'            END AS attribute04,                 -- a.title',
'    --',
'    NULL AS attribute05,                        -- javascript action',
'    --',
'    NULL                                                AS attribute06,     -- badge left',
'    ''<span class="BADGE">'' || b.badge || ''</badge>''     AS attribute07,     -- badge right',
'    --',
'    NULL AS attribute08,',
'    NULL AS attribute09,',
'    NULL AS attribute10,',
'    --',
'    n.page_group,',
'    n.sort_order',
'FROM nav_overview n',
'CROSS JOIN curr',
'LEFT JOIN nav_badges b',
'    ON b.page_id        = n.page_id',
'WHERE n.action          IS NULL',
'    AND n.is_hidden     IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_COLUMNS" ("TABLE_NAME", "COLUMN_ID", "COLUMN_NAME", "DATA_TYPE", "DATA_DEFAULT", "AVG_LENGTH", "IS_PK", "IS_UQ", "IS_FK", "IS_CH", "IS_NN", "COMMENTS") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'c AS (',
'    SELECT',
'        c.table_name,',
'        c.column_id,',
'        c.column_name,',
'        --',
'        c.data_type ||',
'        CASE',
'            WHEN c.data_type LIKE ''%CHAR%'' OR c.data_type = ''RAW'' THEN',
'                DECODE(NVL(c.char_length, 0), 0, '''',',
'                    ''('' || c.char_length || DECODE(c.char_used, ''C'', '' CHAR'', '''') || '')''',
'                )',
'            WHEN c.data_type = ''NUMBER'' THEN',
'                DECODE(NVL(c.data_precision || c.data_scale, 0), 0, '''',',
'                    DECODE(NVL(c.data_scale, 0), 0, ''('' || c.data_precision || '')'',',
'                        ''('' || c.data_precision || '','' || c.data_scale || '')''',
'                    )',
'                )',
'            END AS data_type,',
'        --',
'        c.nullable,',
'        c.data_default,',
'        c.avg_col_len',
'    FROM user_tab_columns c',
'    JOIN user_tables t',
'        ON t.table_name         = c.table_name',
'    CROSS JOIN x',
'    WHERE t.table_name          = NVL(x.table_name, t.table_name)',
'        AND t.table_name        NOT LIKE ''%\__$'' ESCAPE ''\''',
'),',
'n AS (',
'    SELECT',
'        m.table_name,',
'        m.column_name,',
'        CASE WHEN SUM(CASE WHEN n.constraint_type = ''P'' THEN 1 ELSE 0 END) > 0 THEN ''Y'' END AS is_pk,',
'        CASE WHEN SUM(CASE WHEN n.constraint_type = ''R'' THEN 1 ELSE 0 END) > 0 THEN ''Y'' END AS is_fk,',
'        CASE WHEN SUM(CASE WHEN n.constraint_type = ''U'' THEN 1 ELSE 0 END) > 0 THEN ''Y'' END AS is_uq,',
'        --',
'        SUM(CASE WHEN n.constraint_type = ''C'' THEN 1 ELSE 0 END) AS count_ch',
'    FROM user_cons_columns m',
'    JOIN user_constraints n',
'        ON n.constraint_name    = m.constraint_name',
'        AND n.constraint_type   IN (''P'', ''R'', ''U'', ''C'')',
'    CROSS JOIN x',
'    WHERE n.table_name          = NVL(x.table_name, n.table_name)',
'    GROUP BY m.table_name, m.column_name',
')',
'SELECT',
'    c.table_name,',
'    c.column_id,',
'    c.column_name,',
'    c.data_type,',
'    c.data_default,',
'    c.avg_col_len       AS avg_length,',
'    --',
'    n.is_pk,',
'    n.is_uq,',
'    n.is_fk,',
'    --',
'    CASE WHEN n.count_ch - CASE WHEN c.nullable = ''N'' THEN 1 ELSE 0 END > 0 THEN ''Y'' END AS is_ch,',
'    --',
'    CASE WHEN c.nullable = ''N'' THEN ''Y'' END AS is_nn,',
'    --',
'    m.comments',
'FROM c',
'LEFT JOIN n',
'    ON n.table_name     = c.table_name',
'    AND n.column_name   = c.column_name',
'LEFT JOIN user_col_comments m',
'    ON m.table_name     = c.table_name',
'    AND m.column_name   = c.column_name;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_CONSTRAINTS" ("TABLE_NAME", "CONSTRAINT_NAME", "CONSTRAINT_NAME_OLD", "CONSTRAINT_TYPE", "COLS", "PRIMARY_TABLE", "PRIMARY_COLS", "PRIMARY_CONSTRAINT", "IS_NN", "IS_GENERATED", "IS_DISABLED", "IS_DEFERRED", "DELETE_R'
||'ULE", "SORT#") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'n AS (',
'    SELECT XMLTYPE(DBMS_XMLGEN.GETXML(''SELECT c.constraint_name AS name, c.search_condition AS text',
'FROM user_constraints c',
'WHERE c.table_name = NVL('''''' || x.table_name || '''''', c.table_name)',
'    AND c.constraint_type = ''''C''''',
''')) AS constraint_source',
'    FROM x',
'),',
's AS (',
'    SELECT',
'        EXTRACTVALUE(s.object_value, ''/ROW/NAME'') AS constraint_name,',
'        EXTRACTVALUE(s.object_value, ''/ROW/TEXT'') AS search_condition',
'    FROM n',
'    CROSS JOIN TABLE(XMLSEQUENCE(EXTRACT(n.constraint_source, ''/ROWSET/ROW''))) s',
'),',
'p AS (',
'    SELECT',
'        n.table_name,',
'        n.constraint_name,',
'        k.table_name                                                    AS primary_table,',
'        LISTAGG(p.column_name, '', '') WITHIN GROUP (ORDER BY p.position) AS primary_cols,',
'        n.r_constraint_name                                             AS primary_constraint',
'    FROM user_constraints n',
'    JOIN x',
'        ON n.table_name         = NVL(x.table_name, n.table_name)',
'    JOIN user_cons_columns c',
'        ON c.constraint_name    = n.constraint_name',
'    JOIN user_cons_columns p',
'        ON p.constraint_name    = n.r_constraint_name',
'        AND p.position          = c.position',
'    JOIN user_constraints k',
'        ON k.constraint_name    = n.r_constraint_name',
'    WHERE n.constraint_type     = ''R''',
'    GROUP BY n.table_name, n.constraint_name, k.table_name, n.r_constraint_name',
'),',
'c AS (',
'    SELECT',
'        n.table_name,',
'        n.constraint_name,',
'        n.constraint_type,',
'        --',
'        LISTAGG(c.column_name, '', '') WITHIN GROUP (ORDER BY c.position) AS cols,',
'        --',
'        MAX(CASE WHEN s.constraint_name IS NOT NULL     THEN ''Y'' END) AS is_nn,',
'        MAX(CASE WHEN n.generated = ''GENERATED NAME''    THEN ''Y'' END) AS is_generated,',
'        MAX(CASE WHEN n.status = ''DISABLED''             THEN ''Y'' END) AS is_disabled,',
'        MAX(CASE WHEN n.deferrable = ''DEFERRABLE''       THEN ''Y'' END) AS is_deferred,',
'        --',
'        MAX(n.delete_rule) AS delete_rule',
'    FROM user_constraints n',
'    JOIN x',
'        ON n.table_name         = NVL(x.table_name, n.table_name)',
'    JOIN user_cons_columns c',
'        ON c.constraint_name    = n.constraint_name',
'    LEFT JOIN s',
'        ON s.constraint_name    = n.constraint_name',
'        AND s.search_condition  = ''"'' || c.column_name || ''" IS NOT NULL''',
'    WHERE n.table_name          NOT IN (SELECT object_name FROM RECYCLEBIN)',
'    GROUP BY n.table_name, n.constraint_name, n.constraint_type',
')',
'SELECT',
'    c.table_name,',
'    c.constraint_name,',
'    c.constraint_name       AS constraint_name_old,',
'    c.constraint_type,',
'    c.cols,',
'    --',
'    p.primary_table,',
'    p.primary_cols,',
'    p.primary_constraint,',
'    --',
'    c.is_nn,',
'    c.is_generated,',
'    c.is_disabled,',
'    c.is_deferred,',
'    c.delete_rule,',
'    --',
'    TO_CHAR(CASE c.constraint_type WHEN ''P'' THEN 1 WHEN ''R'' THEN 2 ELSE 3 END) || c.constraint_name AS sort#',
'FROM c',
'LEFT JOIN p',
'    ON p.table_name         = c.table_name',
'    AND p.constraint_name   = c.constraint_name;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_CONSTRAINTS_FIX_DT1" ("FOREIGN_TABLE", "FOREIGN_COLUMN", "FOREIGN_TYPE", "PARENT_TABLE", "PARENT_COLUMN", "PARENT_TYPE", "FIX") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
's AS (',
'    SELECT',
'        a.table_name,',
'        a.column_name,',
'        c.position,',
'        --',
'        CASE',
'            WHEN a.data_type = ''NUMBER'' THEN',
'                a.data_type ||',
'                CASE WHEN a.data_precision IS NOT NULL THEN ''('' || a.data_precision || DECODE(a.data_scale, 0, '''', '', '' || a.data_scale) || '')'' END',
'            WHEN a.data_type IN (''CHAR'', ''VARCHAR'', ''VARCHAR2'') THEN',
'                a.data_type || ''('' ||',
'                DECODE(a.char_used, ''C'', a.char_length || '' CHAR'', a.data_length) || '')''',
'            ELSE a.data_type',
'            END AS data_type,',
'        --',
'        n.constraint_type,',
'        c.constraint_name,',
'        n.r_constraint_name',
'    FROM user_tab_columns a',
'    JOIN user_tables t',
'        ON t.table_name         = a.table_name',
'    JOIN user_cons_columns c',
'        ON c.table_name         = a.table_name',
'        AND c.column_name       = a.column_name',
'    JOIN user_constraints n',
'        ON n.constraint_name    = c.constraint_name',
'        AND n.constraint_type   IN (''P'', ''R'')',
'    ORDER BY a.table_name, n.constraint_type, n.constraint_name, a.column_name',
')',
'SELECT',
'    b.table_name    AS foreign_table,',
'    b.column_name   AS foreign_column,',
'    b.data_type     AS foreign_type,',
'    --',
'    s.table_name    AS parent_table,',
'    s.column_name   AS parent_column,',
'    s.data_type     AS parent_type,',
'    --',
'    ''ALTER TABLE '' || LOWER(b.table_name) ||',
'        '' MODIFY '' || LOWER(b.column_name) || '' '' || s.data_type || '';'' AS fix',
'FROM s',
'JOIN s b',
'    ON b.r_constraint_name  = s.constraint_name',
'    AND b.position          = s.position',
'CROSS JOIN x',
'WHERE b.data_type           != s.data_type',
'    AND (',
'        x.table_name        IN (b.table_name, s.table_name)',
'        OR x.table_name     IS NULL',
'    );',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_CONSTRAINTS_FIX_DT2" ("COLUMN_NAME", "DATA_TYPE", "TABLES", "FIX") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
's AS (',
'    SELECT',
'        a.table_name,',
'        a.column_name,',
'        --',
'        CASE',
'            WHEN a.data_type = ''NUMBER'' THEN',
'                a.data_type ||',
'                CASE WHEN a.data_precision IS NOT NULL THEN ''('' || a.data_precision || DECODE(a.data_scale, 0, '''', '', '' || a.data_scale) || '')'' END',
'            WHEN a.data_type IN (''CHAR'', ''VARCHAR'', ''VARCHAR2'') THEN',
'                a.data_type || ''('' ||',
'                DECODE(a.char_used, ''C'', a.char_length || '' CHAR'', a.data_length) || '')''',
'            ELSE a.data_type',
'        END AS data_type        ',
'    FROM user_tab_columns a',
'    JOIN user_tables t',
'        ON t.table_name         = a.table_name',
'    LEFT JOIN user_mviews m',
'        ON m.mview_name         = a.table_name',
'    LEFT JOIN obj_constraints_fix_dt1 d',
'        ON d.foreign_table      = a.table_name',
'        AND d.foreign_column    = a.column_name',
'    WHERE t.table_name          NOT LIKE ''%$'' ESCAPE ''\''    -- skip DML err tables, audit tables...',
'        AND m.mview_name        IS NULL                     -- skip materialized views',
'        AND d.foreign_table     IS NULL                     -- skip columns marked as FK errors',
')',
'SELECT',
'    s.column_name,',
'    s.data_type,',
'    s.tables,',
'    s.fix || '';''                AS fix',
'FROM (',
'    SELECT',
'        s.column_name,',
'        s.data_type,',
'        --',
'        LISTAGG(''<a href="'' ||',
'            app.get_page_link(951,',
'                in_names    => ''P951_TABLE_NAME'',',
'                in_values   => s.table_name',
'            ) || ''">'' || s.table_name || ''</a>'', '', '')',
'            WITHIN GROUP (ORDER BY s.table_name) AS tables,',
'        --',
'        LISTAGG(''ALTER TABLE '' || LOWER(s.table_name) ||',
'                '' MODIFY '' || LOWER(s.column_name) || '' '' || s.data_type, ''; '')',
'            WITHIN GROUP (ORDER BY s.table_name) AS fix,',
'        --',
'        COUNT(*)                                                            AS count_tables,',
'        COUNT(DISTINCT s.data_type) OVER (PARTITION BY s.column_name)       AS count_types',
'    FROM s',
'    GROUP BY s.column_name, s.data_type',
') s',
'CROSS JOIN x',
'WHERE (',
'        s.column_name IN (',
'            SELECT c.column_name',
'            FROM user_tab_cols c',
'            JOIN x',
'                ON x.table_name = c.table_name',
'        )',
'        OR x.table_name IS NULL',
'    )',
'    AND s.count_types > 1;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_INDEXES" ("TABLE_NAME", "INDEX_NAME", "COLS") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT',
'    i.table_name,',
'    i.index_name,',
'    LISTAGG(i.column_name, '', '') WITHIN GROUP (ORDER BY i.column_position) AS cols',
'FROM user_ind_columns i',
'JOIN x',
'    ON i.table_name     = NVL(x.table_name, i.table_name)',
'WHERE i.table_name      NOT IN (SELECT object_name FROM RECYCLEBIN)',
'GROUP BY i.table_name, i.index_name;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_INDEXES_MISSING" ("ACTION", "ACTION_URL", "TABLE_NAME", "INDEX_NAME", "COLS", "FIX") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'f AS (',
'    SELECT',
'        t.table_name,',
'        t.constraint_name                                               AS index_name,',
'        LISTAGG(t.column_name, '', '') WITHIN GROUP (ORDER BY t.position) AS cols',
'    FROM user_cons_columns t',
'    JOIN user_constraints n',
'        ON n.constraint_name    = t.constraint_name',
'    JOIN x',
'        ON n.table_name         = NVL(x.table_name, n.table_name)',
'    WHERE n.constraint_type     = ''R''',
'        AND n.table_name        NOT IN (SELECT object_name FROM RECYCLEBIN)',
'    GROUP BY t.table_name, t.constraint_name',
')',
'SELECT',
'    app.get_icon(''fa-plus-square'') AS action,',
'    app.get_page_link(951,',
'        in_names        => ''P951_TABLE_NAME,P951_INDEX_NAME,P951_INDEX_ADD'',',
'        in_values       => f.table_name || '','' || f.index_name || '',Y''',
'    ) AS action_url,',
'    --',
'    f.table_name,',
'    f.index_name,',
'    f.cols,',
'    --',
'    ''CREATE INDEX '' || RPAD(f.index_name, 30) ||',
'        '' ON '' || RPAD(f.table_name, 30) || '' ('' || f.cols || '') COMPUTE STATISTICS;'' AS fix',
'FROM f',
'LEFT JOIN (',
'    SELECT i.table_name, i.index_name, LISTAGG(i.column_name, '', '') WITHIN GROUP (ORDER BY i.column_position) AS cols',
'    FROM user_ind_columns i',
'    JOIN x',
'        ON i.table_name     = NVL(x.table_name, i.table_name)',
'    GROUP BY i.table_name, i.index_name',
') i',
'    ON i.table_name     = f.table_name',
'    AND i.cols          LIKE f.cols || ''%''',
'WHERE i.index_name      IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_MODULES" ("PACKAGE_NAME", "MODULE_NAME", "GROUP_NAME", "OVERLOAD", "IS_FUNCTION", "IS_PRIVATE", "IS_AUTONOMOUS", "IS_CACHED", "IS_DEFINER", "ARGS_IN", "ARGS_OUT", "SPEC_START", "SPEC_END", "SPEC_LINES", "BODY_START",'
||' "BODY_END", "BODY_LINES", "COMMENT_") AS ',
'  WITH x AS (',
'    SELECT ',
'        app.get_item(''$PACKAGE_NAME'')   AS package_name,',
'        app.get_item(''$MODULE_TYPE'')    AS module_type',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'p AS (',
'    SELECT',
'        i.object_name,',
'        i.object_type,',
'        i.name                  AS module_name,',
'        i.type                  AS module_type,',
'        i.line                                                                                  AS start_line,',
'        LEAD(i.line) OVER (PARTITION BY i.object_name, i.object_type ORDER BY i.line) - 1       AS end_line,',
'        ROW_NUMBER() OVER (PARTITION BY i.object_name, i.object_type, i.name ORDER BY i.line)   AS overload,',
'        --',
'        p.authid,',
'        p.result_cache',
'    FROM user_identifiers i',
'    JOIN user_source s',
'        ON s.name               = i.object_name',
'        AND s.type              = i.object_type',
'        AND s.line              = i.line',
'    JOIN user_procedures p                          -- only public procedures',
'        ON p.object_name        = i.object_name',
'        AND p.procedure_name    = i.name',
'        AND p.object_type       = ''PACKAGE''',
'        AND NVL(p.overload, 1)  = 1',
'    JOIN x',
'        ON s.name               = NVL(x.package_name, s.name)',
'    WHERE i.type                IN (''PROCEDURE'', ''FUNCTION'')',
'        AND i.object_type       IN (''PACKAGE'', ''PACKAGE BODY'')',
'        AND i.usage             = CASE s.type WHEN ''PACKAGE BODY'' THEN ''DEFINITION'' ELSE ''DECLARATION'' END',
'),',
'e AS (',
'    -- find ending lines',
'    SELECT s.*',
'    FROM user_source s',
'    JOIN x',
'        ON s.name               = NVL(x.package_name, s.name)',
'    WHERE (',
'        (s.type = ''PACKAGE BODY'' AND REGEXP_LIKE(UPPER(s.text), ''^\s*END(\s+[A-Z0-9_]+)?\s*;'')) OR',
'        (s.type = ''PACKAGE''      AND REGEXP_LIKE(UPPER(s.text), '';''))',
'    )',
'),',
't AS (',
'    -- calculate module start and end lines',
'    SELECT',
'        p.object_name AS package_name,',
'        p.module_name,',
'        p.module_type,',
'        CASE WHEN MAX(p.overload) OVER (PARTITION BY p.object_name, p.module_name) > 1 THEN p.overload END AS overload,',
'        p.authid,',
'        p.result_cache,',
'        --',
'        MIN(CASE p.object_type WHEN ''PACKAGE''       THEN p.start_line END)              AS spec_start,',
'        MIN(CASE p.object_type WHEN ''PACKAGE''       THEN e.line END)                    AS spec_end,',
'        MIN(CASE p.object_type WHEN ''PACKAGE''       THEN e.line - p.start_line + 1 END) AS spec_lines,',
'        MAX(CASE p.object_type WHEN ''PACKAGE BODY''  THEN p.start_line END)              AS body_start,',
'        MAX(CASE p.object_type WHEN ''PACKAGE BODY''  THEN e.line END)                    AS body_end,',
'        MAX(CASE p.object_type WHEN ''PACKAGE BODY''  THEN e.line - p.start_line + 1 END) AS body_lines',
'    FROM p',
'    LEFT JOIN e',
'        ON e.name       = p.object_name',
'        AND e.type      = p.object_type',
'        AND e.line      BETWEEN p.start_line AND NVL(p.end_line, 999999)',
'    GROUP BY p.object_name, p.module_name, p.module_type, p.overload, p.authid, p.result_cache',
'),',
'a AS (',
'    -- arguments',
'    SELECT',
'        a.package_name,',
'        a.object_name                                                                           AS module_name,',
'        MIN(CASE WHEN a.in_out = ''OUT'' AND a.position = 0 THEN ''FUNCTION'' ELSE ''PROCEDURE'' END) AS module_type,',
'        a.overload,',
'        NULLIF(SUM(CASE WHEN a.in_out LIKE ''IN%''  THEN 1 ELSE 0 END), 0)                        AS args_in,',
'        NULLIF(SUM(CASE WHEN a.in_out LIKE ''%OUT'' AND position > 0 THEN 1 ELSE 0 END), 0)       AS args_out',
'    FROM user_arguments a',
'    JOIN x',
'        ON a.package_name       = NVL(x.package_name, a.package_name)',
'    GROUP BY a.package_name, a.object_name, a.overload',
'),',
'd AS (',
'    -- documentation lines',
'    SELECT',
'        d.package_name, d.module_name, d.module_type, d.overload, --x.line, x.text',
'        LISTAGG(REGEXP_SUBSTR(x.text, ''^\s*--\s*(.*)\s*$'', 1, 1, NULL, 1), ''<br />'') WITHIN GROUP (ORDER BY x.line) AS comment_,',
'        MIN(x.line) AS doc_start',
'    FROM (',
'        SELECT',
'            t.package_name, t.module_name, t.module_type, t.overload,',
'            MAX(x.line) + 1     AS doc_start,',
'            t.spec_start - 1    AS doc_end',
'        FROM t',
'        LEFT JOIN user_source x',
'            ON x.name       = t.package_name',
'            AND x.type      = ''PACKAGE''',
'            AND x.line      < t.spec_start',
'            AND REGEXP_LIKE(x.text, ''^\s*$'')',
'        GROUP BY t.package_name, t.module_name, t.module_type, t.overload, t.spec_start',
'    ) d',
'    LEFT JOIN user_source x',
'        ON x.name       = d.package_name',
'        AND x.type      = ''PACKAGE''',
'        AND x.line      BETWEEN d.doc_start AND d.doc_end',
'        AND NOT REGEXP_LIKE(x.text, ''^\s*--\s*$'')',
'    GROUP BY d.package_name, d.module_name, d.module_type, d.overload',
'),',
'g AS (',
'    SELECT',
'        s.name,',
'        s.line,',
'        RTRIM(REGEXP_REPLACE(s.text, ''^\s*--\s*###\s*'', ''''))    AS group_name,',
'        RPAD('' '', ROW_NUMBER() OVER(ORDER BY s.line DESC))      AS group_sort',
'    FROM user_source s',
'    JOIN x',
'        ON s.name       = NVL(x.package_name, s.name)',
'    WHERE s.type        = ''PACKAGE''',
'        AND REGEXP_LIKE(s.text, ''^\s*--\s*###'')',
')',
'SELECT',
'    t.package_name,',
'    t.module_name,',
'    --',
'    (',
'        SELECT MIN(g.group_sort || g.group_name) KEEP (DENSE_RANK FIRST ORDER BY g.line DESC) AS group_name',
'        FROM g',
'        WHERE g.name        = t.package_name',
'            AND g.line      < t.spec_start',
'    ) AS group_name,',
'    --',
'    t.overload,',
'    --',
'    CASE WHEN t.module_type = ''FUNCTION''    THEN ''Y'' END AS is_function,',
'    CASE WHEN b.text IS NOT NULL            THEN ''Y'' END AS is_private,',
'    CASE WHEN a.text IS NOT NULL            THEN ''Y'' END AS is_autonomous,',
'    CASE WHEN t.result_cache = ''YES''        THEN ''Y'' END AS is_cached,',
'    CASE WHEN t.authid = ''DEFINER''          THEN ''Y'' END AS is_definer,',
'    --',
'    a.args_in,',
'    a.args_out,',
'    --',
'    t.spec_start,',
'    t.spec_end,',
'    t.spec_lines,',
'    t.body_start,',
'    t.body_end,',
'    t.body_lines,',
'    --',
'    d.comment_',
'FROM t',
'JOIN x',
'    ON t.package_name                   = NVL(x.package_name, t.package_name)',
'    AND SUBSTR(t.module_type, 1, 1)     = NVL(x.module_type, SUBSTR(t.module_type, 1, 1))',
'LEFT JOIN a',
'    ON a.package_name       = t.package_name',
'    AND a.module_name       = t.module_name',
'    AND a.module_type       = t.module_type',
'    AND NVL(a.overload, 1)  = NVL(t.overload, 1)',
'LEFT JOIN d',
'    ON d.package_name       = t.package_name',
'    AND d.module_name       = t.module_name',
'    AND d.module_type       = t.module_type',
'    AND NVL(d.overload, 1)  = NVL(t.overload, 1)',
'LEFT JOIN user_source b',
'    ON b.name       = t.package_name',
'    AND b.type      = ''PACKAGE''',
'    AND b.line      BETWEEN t.spec_start AND t.spec_end',
'    AND REGEXP_LIKE(b.text, ''^\s*(ACCESSIBLE BY)'')',
'LEFT JOIN user_source a',
'    ON a.name       = t.package_name',
'    AND a.type      = ''PACKAGE BODY''',
'    AND a.line      BETWEEN t.body_start AND t.body_end',
'    AND REGEXP_LIKE(a.text, ''PRAGMA\s+AUTONOMOUS_TRANSACTION'');',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_OVERVIEW" ("OBJECT_TYPE", "COUNT_OBJECTS", "PAGE_LINK") AS ',
'  SELECT',
'    object_type,',
'    COUNT(*) AS count_objects,',
'    --',
'    CASE object_type',
'        WHEN ''TABLE''        THEN app.get_page_link(951)',
'        WHEN ''TRIGGER''      THEN app.get_page_link(952)',
'        WHEN ''VIEW''         THEN app.get_page_link(955)',
'        WHEN ''PACKAGE''      THEN app.get_page_link(960)',
'        WHEN ''JOB''          THEN app.get_page_link(905)',
'        ELSE NULL',
'        END AS page_link',
'FROM user_objects',
'WHERE object_type NOT IN (''PACKAGE BODY'', ''TABLE PARTITION'')',
'GROUP BY object_type;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_PACKAGES" ("PACKAGE_NAME", "COUNT_PROCEDURES", "COUNT_FUNCTIONS", "COUNT_LINES", "LAST_DDL_TIME", "DESC_") AS ',
'  WITH x AS (',
'    SELECT ',
'        app.get_item(''$PACKAGE_NAME'') AS package_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
's AS (',
'    SELECT',
'        s.name              AS package_name,',
'        COUNT(*)            AS count_lines',
'    FROM user_source s',
'    WHERE s.type            = ''PACKAGE BODY''',
'    GROUP BY s.name',
'),',
'f AS (',
'    SELECT',
'        a.package_name,',
'        SUM(CASE WHEN a.position = 0 THEN 1 ELSE 0 END) AS count_functions',
'    FROM user_arguments a',
'    GROUP BY a.package_name',
')',
'SELECT',
'    p.object_name               AS package_name,',
'    --',
'    COUNT(p.procedure_name) - MIN(f.count_functions)     AS count_procedures,',
'    --',
'    MIN(f.count_functions)      AS count_functions,',
'    MAX(s.count_lines)          AS count_lines,',
'    MAX(o.last_ddl_time)        AS last_ddl_time,',
'    --',
'    -- dependencies?',
'    --',
'    NULL                    AS desc_',
'FROM user_objects o',
'CROSS JOIN x',
'JOIN user_procedures p',
'    ON p.object_name        = o.object_name',
'    AND o.object_type       = ''PACKAGE''',
'JOIN s',
'    ON s.package_name       = p.object_name',
'LEFT JOIN f',
'    ON f.package_name       = p.object_name',
'WHERE o.object_name         = NVL(x.package_name, o.object_name)',
'GROUP BY p.object_name;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_PARTITIONS" ("PARTITION_POSITION", "PARTITION_NAME", "PARTITION_NAME_OLD", "HIGH_VALUE", "HEADER_1", "HEADER_2", "HEADER_3", "HEADER_4", "COUNT_ROWS", "SUBPARTITIONS", "READ_ONLY", "READ_ONLY_OLD", "ACTION_TRUNCATE")'
||' AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'p AS (',
'    SELECT',
'        p.*,',
'        --',
'        ''SELECT p.high_value''                                       || CHR(10) ||',
'        ''FROM user_tab_partitions p''                                || CHR(10) ||',
'        ''WHERE p.table_name = '''''' || p.table_name || ''''''''           || CHR(10) ||',
'        ''    AND p.partition_name = '''''' || p.partition_name || '''''''' AS query_',
'    FROM user_tab_partitions p',
'    JOIN x',
'        ON x.table_name = p.table_name',
'),',
'r AS (',
'    SELECT',
'        p.partition_name,',
'        LTRIM(RTRIM(h.high_value, '' )''), ''( '') AS high_value',
'    FROM p,',
'        -- trick to convert LONG to VARCHAR2 on the fly',
'        XMLTABLE(''/ROWSET/ROW''',
'            PASSING (DBMS_XMLGEN.GETXMLTYPE(p.query_))',
'            COLUMNS high_value VARCHAR2(4000) PATH ''HIGH_VALUE''',
'        ) h',
')',
'SELECT',
'    p.partition_position,',
'    p.partition_name,',
'    p.partition_name        AS partition_name_old,',
'    p.high_value,',
'    --',
'    LTRIM(REGEXP_SUBSTR(r.high_value, ''[^,'' || '']+'', 1, 1)) AS header_1,',
'    LTRIM(REGEXP_SUBSTR(r.high_value, ''[^,'' || '']+'', 1, 2)) AS header_2,',
'    LTRIM(REGEXP_SUBSTR(r.high_value, ''[^,'' || '']+'', 1, 3)) AS header_3,',
'    LTRIM(REGEXP_SUBSTR(r.high_value, ''[^,'' || '']+'', 1, 4)) AS header_4,',
'    --',
'    TO_NUMBER(EXTRACTVALUE(XMLTYPE(DBMS_XMLGEN.GETXML(',
'        ''SELECT /*+ PARALLEL(p,4) */ COUNT(*) AS r '' ||',
'        ''FROM '' || p.table_name || '' PARTITION ('' || p.partition_name || '') p''',
'        )), ''/ROWSET/ROW/R'')) AS count_rows,',
'    --',
'    p.subpartition_count    AS subpartitions,',
'    --',
'    p.read_only,',
'    p.read_only             AS read_only_old,',
'    --',
'    app.get_icon(''fa-trash-o'', ''Truncate partition (delete also data)'') AS action_truncate',
'FROM p',
'JOIN r',
'    ON r.partition_name = p.partition_name;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_TABLES" ("TABLE_NAME", "COUNT_COLS", "COUNT_ROWS", "TABLE_GROUP", "IS_PK", "IS_UQ", "COUNT_FK", "COUNT_IX", "COUNT_TRG", "PARTITIONS", "IS_TEMP", "IS_IOT", "IS_ROW_MOV", "IS_READ_ONLY", "LAST_DDL_TIME", "LAST_ANALYZE'
||'D", "COMMENTS", "AVG_ROW_LEN", "FRAGMENTED_KB", "ACTUAL_KB", "WASTED_KB", "WASTED_PERC", "CACHE", "RESULT_CACHE", "BUFFER_POOL") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
's AS (',
'    -- columns count',
'    SELECT /* materialize */',
'        c.table_name,',
'        COUNT(*)                AS count_cols',
'    FROM user_tab_cols c',
'    CROSS JOIN x',
'    WHERE c.table_name          = NVL(x.table_name, c.table_name)',
'    GROUP BY c.table_name',
'),',
'c AS (',
'    -- constraints overview',
'    SELECT /* materialize */',
'        c.table_name,',
'        NULLIF(SUM(CASE WHEN c.constraint_type = ''P'' THEN 1 ELSE 0 END), 0) AS count_pk,',
'        NULLIF(SUM(CASE WHEN c.constraint_type = ''U'' THEN 1 ELSE 0 END), 0) AS count_uq,',
'        NULLIF(SUM(CASE WHEN c.constraint_type = ''R'' THEN 1 ELSE 0 END), 0) AS count_fk',
'    FROM user_constraints c',
'    CROSS JOIN x',
'    WHERE c.table_name          = NVL(x.table_name, c.table_name)',
'        AND c.constraint_type   IN (''P'', ''U'', ''R'')',
'    GROUP BY c.table_name',
'),',
'i AS (',
'    -- indexes overview',
'    SELECT /* materialize */',
'        i.table_name,',
'        COUNT(i.table_name)     AS count_ix',
'    FROM user_indexes i',
'    CROSS JOIN x',
'    LEFT JOIN user_constraints c',
'        ON c.constraint_name    = i.index_name',
'    WHERE i.table_name          = NVL(x.table_name, i.table_name)',
'        AND i.index_type        != ''LOB''',
'        AND c.constraint_name   IS NULL',
'    GROUP BY i.table_name',
'),',
'g AS (',
'    -- triggers overview',
'    SELECT /* materialize */',
'        g.table_name,',
'        COUNT(g.table_name)     AS count_trg',
'    FROM user_triggers g',
'    CROSS JOIN x',
'    WHERE g.table_name          = NVL(x.table_name, g.table_name)',
'    GROUP BY g.table_name',
'),',
'p AS (',
'    -- partitions count',
'    SELECT /* materialize */',
'        p.table_name,',
'        COUNT(*) AS partitions',
'    FROM user_tab_partitions p',
'    CROSS JOIN x',
'    WHERE p.table_name          = NVL(x.table_name, p.table_name)',
'    GROUP BY p.table_name',
')',
'--',
'SELECT',
'    t.table_name,',
'    s.count_cols,',
'    t.num_rows              AS count_rows,'))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9014660246496943
,p_default_application_id=>770
,p_default_id_offset=>0
,p_default_owner=>'CORE'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(20442967958321458)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'',
'    --',
'    CASE',
'        WHEN c.comments LIKE ''[%]%''',
'            THEN REGEXP_SUBSTR(c.comments, ''^\[([^]]+)\]'', 1, 1, NULL, 1)',
'        ELSE REGEXP_SUBSTR(t.table_name, ''^[^_]+'')',
'        END AS table_group,',
'    --',
'    CASE WHEN c.count_pk    IS NOT NULL THEN ''Y'' END AS is_pk,',
'    CASE WHEN c.count_uq    IS NOT NULL THEN ''Y'' END AS is_uq,',
'    --',
'    c.count_fk,',
'    i.count_ix,',
'    g.count_trg,',
'    --',
'    p.partitions,',
'    --',
'    CASE WHEN t.temporary = ''Y''             THEN ''Y'' END AS is_temp,',
'    CASE WHEN t.iot_type = ''IOT''            THEN ''Y'' END AS is_iot,',
'    CASE WHEN t.row_movement = ''ENABLED''    THEN ''Y'' END AS is_row_mov,',
'    CASE WHEN t.read_only = ''YES''           THEN ''Y'' END AS is_read_only,',
'    --',
'    o.last_ddl_time,',
'    TRUNC(SYSDATE) - TRUNC(t.last_analyzed) AS last_analyzed,  -- in days',
'    --',
'    LTRIM(RTRIM(REGEXP_REPLACE(c.comments, ''^\[[^]]+\]\s*'', ''''))) AS comments,',
'    --',
'    t.avg_row_len,',
'    --',
'    ROUND(t.blocks * 8, 2)                      AS fragmented_kb,',
'    ROUND(t.num_rows * t.avg_row_len / 1024, 2) AS actual_kb,',
'    --',
'    CASE',
'        WHEN ROUND(t.blocks * 8, 2) > 0',
'            THEN ROUND(t.blocks * 8, 2) - ROUND(t.num_rows * t.avg_row_len / 1024, 2)',
'            END AS wasted_kb,',
'    --',
'    CASE',
'        WHEN ROUND(t.blocks * 8, 2) > 0 AND ROUND(t.num_rows * t.avg_row_len / 1024, 2) > 0',
'            THEN FLOOR((ROUND(t.blocks * 8, 2) - ROUND(t.num_rows * t.avg_row_len / 1024, 2)) / ROUND(t.blocks * 8, 2) * 100)',
'            END AS wasted_perc,',
'    --',
'    t.cache,',
'    t.result_cache,',
'    t.buffer_pool',
'FROM user_tables t',
'JOIN user_objects o',
'    ON o.object_name            = t.table_name',
'    AND o.object_type           = ''TABLE''           -- skip views',
'CROSS JOIN x',
'LEFT JOIN user_mviews m',
'    ON m.mview_name             = t.table_name      -- skip mviews',
'LEFT JOIN user_tab_comments c',
'    ON c.table_name             = t.table_name',
'--',
'LEFT JOIN s ON s.table_name     = t.table_name',
'LEFT JOIN c ON c.table_name     = t.table_name',
'LEFT JOIN i ON i.table_name     = t.table_name',
'LEFT JOIN g ON g.table_name     = t.table_name',
'LEFT JOIN p ON p.table_name     = t.table_name',
'--',
'WHERE t.table_name      = NVL(x.table_name, t.table_name)',
'    AND t.table_name    NOT LIKE ''%\__$'' ESCAPE ''\''',
'    AND m.mview_name    IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_TABLES_REF_DOWN" ("TABLE_NAME_", "TABLE_NAME", "FOREIGN_KEY_NAME", "PRIMARY_KEY_NAME") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
't AS (',
'    SELECT',
'        r.table_name,',
'        p.table_name            AS referenced_table,',
'        p.constraint_name       AS primary_key_name,',
'        r.constraint_name       AS foreign_key_name',
'    FROM user_constraints r',
'    JOIN user_constraints p',
'        ON r.r_constraint_name  = p.constraint_name',
'        AND r.constraint_type   = ''R''',
'    WHERE p.constraint_type     = ''P''',
')',
'SELECT',
'    t.table_name                AS table_name_,',
'    t.table_name,',
'    NULL                        AS foreign_key_name,',
'    NULL                        AS primary_key_name',
'FROM user_tables t',
'JOIN x',
'    ON x.table_name             = t.table_name',
'UNION ALL',
'--',
'SELECT',
'    t.table_name                AS table_name_,',
'    --',
'    ''<span style="margin-left: '' || (LEVEL * 2) || ''rem;">'' || t.table_name         || ''</span>'' AS table_name,',
'    ''<span style="margin-left: '' || (LEVEL * 2) || ''rem;">'' || t.foreign_key_name   || ''</span>'' AS foreign_key_name,',
'    t.primary_key_name',
'FROM t',
'CONNECT BY NOCYCLE t.referenced_table = PRIOR t.table_name',
'START WITH t.referenced_table = (SELECT x.table_name FROM x);',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_TABLES_REF_OBJECTS" ("REFERENCED_NAME", "REFERENCED_TYPE", "PATH_") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                    AS app_id,',
'        app.get_item(''$TABLE_NAME'')         AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT',
'    d.referenced_name,',
'    d.referenced_type,',
'    d.path_',
'FROM (',
'    SELECT DISTINCT',
'        ''<span style="margin-left: '' || ((LEVEL - 2) * 2) || ''rem;">'' || d.referenced_name   || ''</span>'' AS referenced_name,',
'        ''<span style="margin-left: '' || ((LEVEL - 2) * 2) || ''rem;">'' || d.referenced_type   || ''</span>'' AS referenced_type,',
'        --',
'        SYS_CONNECT_BY_PATH(d.referenced_name, ''/'') AS path_,',
'        LEVEL                                       AS level_',
'    FROM user_dependencies d',
'    CROSS JOIN x',
'    WHERE d.referenced_owner        = app.get_owner()',
'    CONNECT BY NOCYCLE PRIOR d.name = d.referenced_name',
'        AND LEVEL                   <= 2                    -- limit depth',
'    START WITH d.referenced_name    = x.table_name',
') d',
'WHERE d.level_ > 1;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_TABLES_REF_PAGES" ("PAGE_ID", "PAGE_NAME", "SUPPLEMENTAL_INFO", "LIST_BADGE", "SORT#") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                    AS app_id,',
'        app.get_item(''$TABLE_NAME'')         AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT',
'    r.page_id,',
'    r.page_id || '' - '' || p.page_title || '', '' || r.region_name AS page_name,',
'    r.table_name                                                AS supplemental_info,',
'    --',
'    CASE WHEN r.table_name = x.table_name',
'        THEN r.page_id',
'        END AS list_badge,',
'    --',
'    CASE WHEN r.table_name = x.table_name',
'        THEN 0',
'        ELSE ROW_NUMBER() OVER (ORDER BY r.page_id, r.region_name) END AS sort#',
'FROM apex_application_page_regions r',
'JOIN apex_application_pages p',
'    ON p.application_id     = r.application_id',
'    AND p.page_id           = r.page_id',
'JOIN x',
'    ON x.app_id             = r.application_id',
'WHERE r.query_type_code     = ''TABLE''',
'    AND (',
'        r.table_name        = x.table_name',
'        OR r.table_name     IN (',
'            SELECT DISTINCT d.name                  AS view_name',
'            FROM user_dependencies d',
'            CROSS JOIN x',
'            WHERE d.referenced_owner                = app.get_owner()',
'                AND d.type                          = ''VIEW''',
'            CONNECT BY NOCYCLE d.referenced_name    = PRIOR d.name',
'                AND d.referenced_type               = ''VIEW''',
'            START WITH d.referenced_name            = x.table_name',
'                AND d.referenced_type               = ''TABLE''',
'        )',
'    );',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_TABLES_REF_UP" ("TABLE_NAME_", "TABLE_NAME", "FOREIGN_KEY_NAME", "PRIMARY_KEY_NAME") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_item(''$TABLE_NAME'') AS table_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
't AS (',
'    SELECT',
'        r.table_name,',
'        p.table_name            AS referenced_table,',
'        p.constraint_name       AS primary_key_name,',
'        r.constraint_name       AS foreign_key_name',
'    FROM user_constraints r',
'    JOIN user_constraints p',
'        ON r.r_constraint_name  = p.constraint_name',
'        AND r.constraint_type   = ''R''',
'    WHERE p.constraint_type     = ''P''',
')',
'SELECT',
'    t.table_name                AS table_name_,',
'    t.table_name,',
'    NULL                        AS foreign_key_name,',
'    NULL                        AS primary_key_name',
'FROM user_tables t',
'JOIN x',
'    ON x.table_name             = t.table_name',
'UNION ALL',
'--',
'SELECT',
'    t.referenced_table          AS table_name_,',
'    --',
'    ''<span style="margin-left: '' || (LEVEL * 2) || ''rem;">'' || t.referenced_table   || ''</span>'' AS table_name,',
'    ''<span style="margin-left: '' || (LEVEL * 2) || ''rem;">'' || t.foreign_key_name   || ''</span>'' AS foreign_key_name,',
'    t.primary_key_name',
'FROM t',
'CONNECT BY NOCYCLE PRIOR t.referenced_table = t.table_name',
'START WITH t.table_name = (SELECT x.table_name FROM x);',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_TRIGGERS" ("TABLE_NAME", "TRIGGER_NAME", "TABLE_GROUP", "IS_VALID", "COUNT_CALLS", "COUNT_INSERTED", "COUNT_UPDATED", "COUNT_DELETED", "LAST_DDL_TIME") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                AS app_id,',
'        app.get_item(''$TABLE_NAME'')     AS table_name,',
'        app.get_item(''$TRIGGER_NAME'')   AS trigger_name,',
'        app.get_date_item(''G_TODAY'')    AS today',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'r AS (',
'    SELECT /* materialize */',
'        l.action_name       AS table_name,',
'        COUNT(l.log_id)                                                                     AS count_calls,',
'        SUM(TO_NUMBER(REGEXP_SUBSTR(l.arguments, ''"inserted":"?(\d+)'', 1, 1, NULL, 1)))     AS count_inserted,',
'        SUM(TO_NUMBER(REGEXP_SUBSTR(l.arguments, ''"updated":"?(\d+)'',  1, 1, NULL, 1)))     AS count_updated,',
'        SUM(TO_NUMBER(REGEXP_SUBSTR(l.arguments, ''"deleted":"?(\d+)'',  1, 1, NULL, 1)))     AS count_deleted',
'    FROM x',
'    JOIN logs l',
'        ON l.created_at     >= x.today',
'        AND l.created_at    < x.today + 1',
'        AND l.app_id        = x.app_id',
'        AND l.flag          = ''G''',
'        AND l.action_name   = NVL(x.table_name, l.action_name)',
'    GROUP BY l.action_name',
')',
'SELECT',
'    t.table_name,',
'    g.trigger_name,',
'    --',
'    CASE',
'        WHEN c.comments LIKE ''[%]%''',
'            THEN REGEXP_SUBSTR(c.comments, ''^\[([^]]+)\]'', 1, 1, NULL, 1)',
'        ELSE REGEXP_SUBSTR(t.table_name, ''^[^_]+'')',
'        END AS table_group,',
'    --',
'    CASE',
'        WHEN g.trigger_name         = t.table_name || ''__''          -- default trigger name',
'            AND g.trigger_type      = ''COMPOUND''',
'            AND g.triggering_event  = ''INSERT OR UPDATE OR DELETE''',
'            AND g.before_statement  = ''YES''',
'            AND g.before_row        = ''YES''',
'            AND g.after_row         = ''YES''',
'            AND g.after_statement   = ''YES''',
'            AND g.status            = ''ENABLED''',
'        THEN ''Y''',
'        END AS is_valid,',
'    --',
'    r.count_calls,',
'    r.count_inserted,',
'    r.count_updated,',
'    r.count_deleted,',
'    --',
'    o.last_ddl_time',
'FROM user_tables t',
'CROSS JOIN x',
'LEFT JOIN user_triggers g',
'    ON g.table_name     = t.table_name',
'LEFT JOIN user_objects o',
'    ON o.object_name    = g.trigger_name',
'LEFT JOIN user_mviews v',
'    ON v.mview_name     = t.table_name',
'LEFT JOIN r',
'    ON r.table_name     = g.table_name',
'LEFT JOIN user_tab_comments c',
'    ON c.table_name     = t.table_name',
'WHERE t.table_name      = NVL(x.table_name, t.table_name)',
'    AND t.table_name    NOT LIKE ''%\_%$'' ESCAPE ''\''',
'    AND v.mview_name    IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "OBJ_VIEWS" ("VIEW_GROUP", "VIEW_NAME", "COUNT_LINES", "USED_IN_OBJECTS", "USED_ON_PAGES", "REFERENCED_TABLES", "REFERENCED_VIEWS", "IS_READONLY", "IS_DEFINER", "COMMENTS", "LAST_DDL_TIME") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()            AS app_id,',
'        app.get_item(''$VIEW_NAME'')  AS view_name',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'r AS (',
'    SELECT',
'        d.name                  AS view_name,',
'        --',
'        LISTAGG(CASE WHEN d.referenced_type = ''TABLE''',
'            THEN ''<a href="'' || app.get_page_link(951, in_names => ''P951_TABLE_NAME'', in_values => d.referenced_name) || ''">'' || d.referenced_name || ''</a>'' END, '', '')',
'            WITHIN GROUP (ORDER BY d.referenced_name)',
'            AS referenced_tables,',
'        --',
'        LISTAGG(CASE WHEN d.referenced_type = ''VIEW''',
'            THEN ''<a href="'' || app.get_page_link(955, in_names => ''P955_VIEW_NAME'', in_values => d.referenced_name) || ''">'' || d.referenced_name || ''</a>'' END, '', '')',
'            WITHIN GROUP (ORDER BY d.referenced_name)',
'            AS referenced_views',
'    FROM user_dependencies d',
'    CROSS JOIN x',
'    WHERE d.type                = ''VIEW''',
'        AND d.name              = NVL(x.view_name, d.name)',
'    GROUP BY d.name',
'),',
'u AS (',
'    SELECT',
'        d.referenced_name                                       AS view_name,',
'        LISTAGG(d.name, '', '') WITHIN GROUP (ORDER BY d.name)    AS used_in_objects',
'    FROM user_dependencies d',
'    WHERE d.referenced_type     = ''VIEW''',
'    GROUP BY d.referenced_name',
'),',
'p AS (',
'    SELECT',
'        r.table_name,',
'        LISTAGG(DISTINCT ''<a href="'' ||',
'            app.get_page_link(910,',
'                in_names    => ''P910_PAGE_ID'',',
'                in_values   => r.page_id',
'            ) || ''">'' || r.page_id || ''</a>'', '', '')',
'            WITHIN GROUP (ORDER BY r.page_id) AS used_on_pages',
'    FROM apex_application_page_regions r',
'    JOIN x',
'        ON x.app_id             = r.application_id',
'    WHERE r.query_type_code     = ''TABLE''',
'    GROUP BY r.table_name',
'),',
's AS (',
'    SELECT',
'        s.name              AS view_name,',
'        COUNT(s.line)       AS count_lines',
'    FROM user_source_views s',
'    GROUP BY s.name',
')',
'SELECT',
'    CASE',
'        WHEN c.comments LIKE ''[%]%''',
'            THEN REGEXP_SUBSTR(c.comments, ''^\[([^]]+)\]'', 1, 1, NULL, 1)',
'        ELSE REGEXP_SUBSTR(REGEXP_REPLACE(v.view_name, ''^P\d+$'', ''PAGE#''), ''^[^_]+'')',
'        END AS view_group,',
'    --',
'    v.view_name,',
'    s.count_lines,',
'    --',
'    u.used_in_objects,',
'    p.used_on_pages,',
'    r.referenced_tables,',
'    r.referenced_views,',
'    --',
'    NULLIF(v.read_only, ''N'') AS is_readonly,',
'    --',
'    CASE WHEN v.bequeath = ''DEFINER'' THEN ''Y'' END AS is_definer,',
'    --',
'    LTRIM(RTRIM(REGEXP_REPLACE(c.comments, ''^\[[^]]+\]\s*'', ''''))) AS comments,',
'    --',
'    o.last_ddl_time',
'FROM user_views v',
'JOIN user_objects o',
'    ON o.object_name            = v.view_name',
'    AND o.object_type           = ''VIEW''',
'CROSS JOIN x',
'LEFT JOIN r',
'    ON r.view_name              = v.view_name',
'LEFT JOIN u',
'    ON u.view_name              = v.view_name',
'LEFT JOIN p',
'    ON p.table_name             = v.view_name',
'LEFT JOIN s',
'    ON s.view_name              = v.view_name',
'LEFT JOIN user_tab_comments c',
'    ON c.table_name             = v.view_name',
'WHERE v.view_name               = NVL(x.view_name, v.view_name);',
'',
'CREATE OR REPLACE FORCE VIEW "ROLES_AUTH_SCHEMES" ("ROLE_ID", "ROLE_GROUP", "AUTH_SCHEME", "AUTH_SCHEME_ICON", "AUTH_PROCEDURE", "AUTH_PROCEDURE_ICON", "AUTH_SOURCE_CODE", "COUNT_PAGES", "COUNT_REGIONS", "COUNT_USERS", "CACHE_SESSION", "CACHE_PAGE_VI'
||'EW", "CACHE_COMPONENT", "CACHE_NO", "ERROR_MESSAGE", "ORDER#") AS ',
'  SELECT',
'    MAX(r.role_id)                          AS role_id,',
'    MAX(r.role_group)                       AS role_group,',
'    --',
'    a.authorization_scheme_name             AS auth_scheme,',
'    NULL                                    AS auth_scheme_icon,',
'    --',
'    MAX(LTRIM(s.object_name || ''.'' || s.procedure_name, ''.'')) AS auth_procedure,',
'    --',
'    CASE',
'        WHEN MAX(s.procedure_name) IS NULL AND a.authorization_scheme_name NOT IN (''NOBODY'')',
'            THEN ''fa fa-warning''',
'        END AS auth_procedure_icon,',
'',
'    MAX(a.attribute_01)                     AS auth_source_code,',
'    --',
'    NULLIF(COUNT(DISTINCT p.page_id), 0)    AS count_pages,',
'    NULLIF(COUNT(DISTINCT g.region_id), 0)  AS count_regions,',
'    NULLIF(COUNT(DISTINCT u.user_id), 0)    AS count_users,',
'    --',
'    MAX(CASE WHEN a.caching = ''Once per session''    THEN ''Y'' END)   AS cache_session,',
'    MAX(CASE WHEN a.caching = ''Once per page view''  THEN ''Y'' END)   AS cache_page_view,',
'    MAX(CASE WHEN a.caching = ''BY_COMPONENT''        THEN ''Y'' END)   AS cache_component,',
'    MAX(CASE WHEN a.caching = ''NOCACHE''             THEN ''Y'' END)   AS cache_no,',
'    --',
'    MAX(a.error_message)                    AS error_message,',
'    MAX(r.order#)                           AS order#',
'FROM apex_application_authorization a',
'LEFT JOIN apex_application_pages p',
'    ON p.application_id                 = a.application_id',
'    AND p.authorization_scheme          = a.authorization_scheme_name',
'LEFT JOIN apex_application_page_regions g',
'    ON g.application_id                 = a.application_id',
'    AND g.authorization_scheme          = a.authorization_scheme_name',
'    AND g.parent_region_id              IS NULL',
'LEFT JOIN roles r',
'    ON r.role_id                        = a.authorization_scheme_name',
'LEFT JOIN user_roles u',
'    ON u.app_id                         = a.application_id',
'    AND u.role_id                       = r.role_id',
'LEFT JOIN user_procedures s',
'    ON s.procedure_name                 = a.authorization_scheme_name',
'    AND UPPER(a.attribute_01)           LIKE ''%'' || s.object_name || ''.'' || s.procedure_name || ''%''',
'WHERE a.application_id                  = app.get_app_id()',
'GROUP BY a.authorization_scheme_name',
'UNION ALL',
'--',
'SELECT',
'    r.role_id,',
'    r.role_group,',
'    --',
'    NULL                AS auth_scheme,',
'    ''fa fa-warning''     AS auth_scheme_icon,',
'    NULL                AS auth_procedure,',
'    ''fa fa-warning''     AS auth_procedure_icon,',
'    NULL                AS auth_source_code,',
'    NULL                AS count_pages,',
'    NULL                AS count_regions,',
'    u.count_users       AS count_users,',
'    NULL                AS cache_session,',
'    NULL                AS cache_page_view,',
'    NULL                AS cache_component,',
'    NULL                AS cache_no,',
'    NULL                AS error_message,',
'    r.order#',
'FROM roles r',
'LEFT JOIN apex_application_authorization a',
'    ON a.application_id                 = r.app_id',
'    AND a.authorization_scheme_name     = r.role_id',
'LEFT JOIN (',
'    SELECT',
'        u.role_id,',
'        COUNT(*)        AS count_users',
'    FROM user_roles u',
'    WHERE u.app_id      = app.get_app_id()',
'    GROUP BY u.role_id',
') u',
'    ON u.role_id                        = r.role_id',
'WHERE r.app_id                          = app.get_app_id()',
'    AND a.authorization_scheme_name     IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "ROLES_CARDS" ("ROLE_ID", "ROLE_NAME", "DESCRIPTION_", "IS_ACTIVE", "COUNT_PAGES") AS ',
'  WITH x AS (',
'    SELECT',
'        u.user_id,',
'        app.get_app_id()        AS app_id,',
'        app.is_developer_y()    AS is_developer',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
')',
'SELECT',
'    r.role_id,',
'    r.role_name,',
'    r.description_,',
'    r.is_active,',
'    --',
'    COUNT(p.page_id)            AS count_pages',
'FROM (',
'    SELECT',
'        r.app_id,',
'        r.role_id,',
'        r.role_name,',
'        r.description_,',
'        r.is_active,',
'        --',
'        ROW_NUMBER() OVER(ORDER BY r.role_group NULLS LAST, r.order# NULLS LAST, r.role_id) AS sort#',
'    FROM roles r',
'    JOIN user_roles u',
'        ON u.app_id             = r.app_id',
'        AND u.role_id           = r.role_id',
'    JOIN x',
'        ON x.app_id             = u.app_id',
'        AND x.user_id           = u.user_id',
'    UNION ALL',
'    SELECT',
'        x.app_id,',
'        ''IS_DEVELOPER''          AS role_id,',
'        ''Developer''             AS role_name,',
'        '''',',
'        ''Y''                     AS is_active,',
'        0                       AS sort#',
'    FROM x',
'    WHERE x.is_developer        = ''Y''',
') r',
'LEFT JOIN navigation n',
'    ON n.app_id                 = r.app_id',
'LEFT JOIN apex_application_pages p',
'    ON p.application_id         = n.app_id',
'    AND p.page_id               = n.page_id',
'    AND p.authorization_scheme  = r.role_id',
'GROUP BY',
'    r.role_id,',
'    r.role_name,',
'    r.description_,',
'    r.is_active,',
'    r.sort#',
'ORDER BY r.sort#;',
'',
'CREATE OR REPLACE FORCE VIEW "ROLES_OVERVIEW" ("APP_ID", "COUNT_USERS", "ROLE_ID", "ROLE_NAME", "ROLE_GROUP", "DESCRIPTION_", "IS_ACTIVE", "ORDER#", "UPDATED_BY", "UPDATED_AT") AS ',
'  SELECT',
'    r.app_id,',
'    --',
'    u.count_users,',
'    --',
'    r.role_id,',
'    r.role_name,',
'    r.role_group,',
'    r.description_,',
'    r.is_active,',
'    r.order#,',
'    r.updated_by,',
'    r.updated_at',
'FROM roles r',
'LEFT JOIN (',
'    SELECT',
'        u.role_id,',
'        COUNT(*)        AS count_users',
'    FROM user_roles u',
'    WHERE u.app_id      = app.get_app_id()',
'    GROUP BY u.role_id',
') u',
'    ON u.role_id        = r.role_id',
'WHERE r.app_id          = app.get_app_id();',
'',
'CREATE OR REPLACE FORCE VIEW "SCHEDULER_DETAILS" ("LOG_ID", "JOB_NAME", "START_DATE", "RUN_DURATION", "CPU_USED", "STATUS", "ERROR#", "ERROR_DESC", "OUTPUT", "ADDITIONAL_INFO") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                AS app_id,',
'        app.get_date_item(''G_TODAY'')    AS today,',
'        app.get_item(''$JOB_NAME'')       AS job_name,',
'        app.get_item(''$JOB_STATUS'')     AS job_status',
'    FROM users u',
'    WHERE u.user_id     = app.get_user_id()',
')',
'SELECT',
'    d.log_id,',
'    d.job_name,',
'    d.actual_start_date                 AS start_date,',
'    app.get_duration(d.run_duration)    AS run_duration,',
'    app.get_duration(d.cpu_used)        AS cpu_used,',
'    d.status,',
'    --d.session_id,',
'    d.error#,',
'    d.errors                            AS error_desc,',
'    d.output,',
'    d.additional_info',
'FROM user_scheduler_job_run_details d',
'JOIN x',
'    ON d.actual_start_date      >= x.today',
'    AND d.actual_start_date     < x.today + 1',
'    AND d.job_name              = NVL(x.job_name, d.job_name)',
'    AND d.status                = NVL(x.job_status, d.status);',
'',
'CREATE OR REPLACE FORCE VIEW "SCHEDULER_PLANNED" ("JOB_NAME", "JOB_TYPE", "JOB_PRIORITY", "JOB_ACTION", "JOB_ARGS", "REPEAT_INTERVAL", "RUN_COUNT", "FAILURE_COUNT", "RETRY_COUNT", "NEXT_RUN_DATE", "LAST_START_DATE", "LAST_RUN_DURATION", "IS_AUTODROP"'
||', "IS_ENABLED", "COMMENTS") AS ',
'  SELECT',
'    j.job_name,',
'    j.job_type,',
'    j.job_priority,',
'    j.job_action,',
'    j.number_of_arguments           AS job_args,',
'    j.repeat_interval,',
'    --',
'    NULLIF(j.run_count, 0)          AS run_count,',
'    NULLIF(j.failure_count, 0)      AS failure_count,',
'    NULLIF(j.retry_count, 0)        AS retry_count,',
'    --',
'    j.next_run_date,',
'    j.last_start_date,',
'    --',
'    app.get_duration(j.last_run_duration) AS last_run_duration,',
'    --',
'    CASE WHEN j.auto_drop = ''TRUE''                          THEN ''Y'' END AS is_autodrop,',
'    CASE WHEN j.state = ''SCHEDULED'' AND j.enabled = ''TRUE''  THEN ''Y'' END AS is_enabled,',
'    --',
'    j.comments',
'FROM user_scheduler_jobs j;',
'',
'CREATE OR REPLACE FORCE VIEW "SCHEDULER_RUNNING" ("LOG_ID", "JOB_NAME", "JOB_STYLE", "ELAPSED_TIME", "CPU_USED", "DESTINATION", "SESSION_ID", "RESOURCE_CONSUMER_GROUP", "CREDENTIAL_NAME") AS ',
'  SELECT',
'    j.log_id,',
'    j.job_name,',
'    j.job_style,',
'    j.elapsed_time,',
'    j.cpu_used,',
'    j.destination,',
'    j.session_id,',
'    j.resource_consumer_group,',
'    j.credential_name',
'FROM user_scheduler_running_jobs j;',
'',
'CREATE OR REPLACE FORCE VIEW "SESSIONS_CHART" ("BUCKET_ID", "CHART_LABEL", "COUNT_SESSIONS", "COUNT_USERS", "COUNT_PAGES", "COUNT_REQUESTS", "COUNT_OTHERS") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()                AS app_id,',
'        app.get_item(''$USER_ID'')        AS user_id,',
'        app.get_date_item(''G_TODAY'')    AS today,',
'        10                              AS buckets',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'z AS (',
'    SELECT',
'        x.app_id,',
'        x.user_id,',
'        x.today,',
'        x.buckets,',
'        --',
'        LEVEL                                                                   AS bucket_id,',
'        TRUNC(SYSDATE) + NUMTODSINTERVAL((LEVEL - 1) * x.buckets, ''MINUTE'')     AS start_at,',
'        TRUNC(SYSDATE) + NUMTODSINTERVAL( LEVEL      * x.buckets, ''MINUTE'')     AS end_at',
'    FROM x',
'    CONNECT BY LEVEL <= (1440 / x.buckets)',
')',
'SELECT',
'    z.bucket_id,',
'    TO_CHAR(z.start_at, ''HH24:MI'')      AS chart_label,',
'    --',
'    NULLIF(COUNT(DISTINCT CASE WHEN l.app_id = z.app_id THEN l.session_id   END), 0)    AS count_sessions,',
'    NULLIF(COUNT(DISTINCT CASE WHEN l.app_id = z.app_id THEN l.user_id      END), 0)    AS count_users,',
'    NULLIF(COUNT(DISTINCT CASE WHEN l.app_id = z.app_id THEN l.page_id      END), 0)    AS count_pages,',
'    --',
'    NULLIF(SUM(CASE WHEN l.app_id  = z.app_id AND l.flag = ''P'' THEN 1 ELSE 0 END), 0)   AS count_requests,   -- app.flag_request',
'    NULLIF(SUM(CASE WHEN l.app_id != z.app_id AND l.flag = ''P'' THEN 1 ELSE 0 END), 0)   AS count_others',
'FROM z',
'LEFT JOIN logs l',
'    ON l.created_at     >= z.today',
'    AND l.created_at    < z.today + 1',
'    AND z.bucket_id     = app.get_time_bucket(l.created_at, z.buckets)',
'GROUP BY z.bucket_id, TO_CHAR(z.start_at, ''HH24:MI'');',
'',
'CREATE OR REPLACE FORCE VIEW "SESSIONS_OVERVIEW" ("APP_ID", "SESSION_ID", "USER_ID", "COUNT_REQUESTS", "COUNT_LOGS", "COUNT_ERRORS", "COUNT_EVENTS", "CREATED_AT", "UPDATED_AT", "DURATION", "ACTION_DELETE") AS ',
'  WITH s AS (',
'    SELECT',
'        s.*,',
'        TRUNC(s.created_at)         AS today',
'    FROM sessions s',
'    WHERE s.app_id          = app.get_app_id()',
'        AND (s.session_id   = app.get_item(''$SESSION_ID'')   OR app.get_item(''$SESSION_ID'')  IS NULL)',
'        AND (s.user_id      = app.get_item(''$USER_ID'')      OR app.get_item(''$USER_ID'')     IS NULL)',
'        --',
'        AND s.created_at    >= app.get_date_item(''G_TODAY'')',
'        AND s.created_at    < app.get_date_item(''G_TODAY'') + 1',
'),',
'l AS (',
'    SELECT',
'        l.session_id,',
'        COUNT(*)                                                    AS count_logs,',
'        NULLIF(SUM(CASE WHEN l.flag = ''P'' THEN 1 ELSE 0 END), 0)    AS count_requests,',
'        NULLIF(SUM(CASE WHEN l.flag = ''E'' THEN 1 ELSE 0 END), 0)    AS count_errors',
'    FROM logs l',
'    JOIN s',
'        ON l.created_at     >= s.today',
'        AND l.created_at    < s.today + 1',
'        AND s.app_id        = l.app_id',
'        AND s.session_id    = l.session_id',
'    GROUP BY l.session_id',
'),',
'b AS (',
'    SELECT',
'        l.session_id,',
'        COUNT(*)            AS count_events',
'    FROM log_events l',
'    JOIN s',
'        ON l.created_at     >= s.today',
'        AND l.created_at    < s.today + 1',
'        AND s.app_id        = l.app_id',
'        AND s.session_id    = l.session_id',
'    GROUP BY l.session_id',
')',
'SELECT',
'    s.app_id,',
'    s.session_id,',
'    s.user_id,',
'    --',
'    l.count_requests,',
'    l.count_logs,',
'    l.count_errors,',
'    b.count_events,',
'    --',
'    s.created_at,',
'    s.updated_at,',
'    --',
'    app.get_duration(s.updated_at - s.created_at)           AS duration,',
'    app.get_icon(''fa-trash-o'', ''Delete session and logs'')   AS action_delete',
'FROM s',
'LEFT JOIN l ON l.session_id = s.session_id',
'LEFT JOIN b ON b.session_id = s.session_id;',
'',
'CREATE OR REPLACE FORCE VIEW "SETTINGS_OVERVIEW" ("SETTING_GROUP", "SETTING_NAME", "SETTING_NAME_OLD", "SETTING_VALUE", "IS_NUMERIC", "IS_DATE", "PROCEDURE_NAME", "DATA_TYPE", "REFERENCES_PROCEDURES", "REFERENCES_VIEWS", "ACTION_CHECK", "DESCRIPTION_'
||'", "UPDATED_BY", "UPDATED_AT") AS ',
'  WITH x AS (',
'    SELECT',
'        UPPER(''SETT'')                   AS package_name,        -- app_actions spec',
'        UPPER(''GET_'')                   AS prefix,',
'        app.get_item(''$SETTING_NAME'')   AS setting_name,',
'        app.get_app_id()                AS app_id',
'    FROM users u',
'    WHERE u.user_id = app.get_user_id()',
'),',
'p AS (',
'    SELECT p.procedure_name, a.data_type',
'    FROM user_procedures p',
'    JOIN user_arguments a',
'        ON a.package_name   = p.object_name',
'        AND a.object_name   = p.procedure_name',
'        AND a.position      = 0',
'    JOIN x',
'        ON x.package_name   = p.object_name',
'),',
'r AS (',
'    SELECT',
'        t.procedure_name,',
'        COUNT(*)            AS references',
'    FROM (',
'        SELECT REPLACE(RTRIM(REGEXP_SUBSTR(UPPER(s.text), x.package_name || ''\.'' || REPLACE(x.prefix, ''_'', ''\_'') || ''[^(]*'')), x.package_name || ''.'', '''') AS procedure_name',
'        FROM user_source s',
'        CROSS JOIN x',
'        WHERE UPPER(s.text) LIKE ''%'' || x.package_name || ''.'' || x.prefix || ''%''',
'    ) t',
'    GROUP BY t.procedure_name',
'),',
'v AS (',
'    SELECT',
'        t.procedure_name,',
'        COUNT(*)            AS references',
'    FROM (',
'        SELECT REPLACE(RTRIM(REGEXP_SUBSTR(UPPER(s.text), x.package_name || ''\.'' || REPLACE(x.prefix, ''_'', ''\_'') || ''[^(]*'')), x.package_name || ''.'', '''') AS procedure_name',
'        FROM user_source_views s',
'        CROSS JOIN x',
'        WHERE UPPER(s.text) LIKE ''%'' || x.package_name || ''.'' || x.prefix || ''%''',
'    ) t',
'    GROUP BY t.procedure_name',
')',
'SELECT',
'    s.setting_group,',
'    s.setting_name,',
'    s.setting_name          AS setting_name_old,',
'    s.setting_value,',
'    s.is_numeric,',
'    s.is_date,',
'    --',
'    p.procedure_name,',
'    p.data_type,',
'    --',
'    r.references            AS references_procedures,',
'    v.references            AS references_views,',
'    --',
'    CASE',
'        WHEN p.procedure_name IS NOT NULL',
'            AND (',
'                (p.data_type    = ''VARCHAR2''    AND s.is_numeric IS NULL AND s.is_date IS NULL)',
'                OR (p.data_type = ''NUMBER''      AND s.is_numeric = ''Y'')',
'                OR (p.data_type = ''DATE''        AND s.is_date = ''Y'')',
'            )',
'        THEN NULL',
'        ELSE app.get_icon(''fa-warning'', ''Rebuild needed'')',
'        END AS action_check,',
'    --',
'    s.description_,',
'    s.updated_by,',
'    s.updated_at',
'FROM settings s',
'JOIN x',
'    ON x.app_id             = s.app_id',
'LEFT JOIN p',
'    ON p.procedure_name     = x.prefix || s.setting_name',
'LEFT JOIN r',
'    ON r.procedure_name     = x.prefix || s.setting_name',
'LEFT JOIN v',
'    ON v.procedure_name     = x.prefix || s.setting_name',
'WHERE s.setting_name        = NVL(x.setting_name, s.setting_name)',
'    AND s.setting_context   IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "USERS_APPS" ("APP_ID", "APP_NAME", "APP_ALIAS", "APP_GROUP", "APP_SCHEMA", "APP_URL", "APP_VERSION", "AUTHENTICATION_SCHEME", "LAST_UPDATED_ON", "COUNT_PAGES", "IS_ACTIVE", "IS_VISIBLE", "IS_AVAILABLE", "IS_OFFLINE", "DE'
||'SCRIPTION_", "MESSAGE", "ACTION", "ACTION_ID") AS ',
'  WITH p AS (',
'    SELECT',
'        a.application_id        AS app_id,',
'        a.alias                 AS app_alias,',
'        a.application_group     AS app_group,',
'        a.owner                 AS app_schema,',
'        a.application_name      AS app_name,',
'        a.version               AS app_version,',
'        a.authentication_scheme,',
'        a.last_updated_on,',
'        a.pages      '))
);
null;
wwv_flow_api.component_end;
end;
/
begin
wwv_flow_api.component_begin (
 p_version_yyyy_mm_dd=>'2021.04.15'
,p_release=>'21.1.7'
,p_default_workspace_id=>9014660246496943
,p_default_application_id=>770
,p_default_id_offset=>0
,p_default_owner=>'CORE'
);
wwv_flow_api.append_to_install_script(
 p_id=>wwv_flow_api.id(20442967958321458)
,p_script_clob=>wwv_flow_string.join(wwv_flow_t_varchar2(
'           AS count_pages,',
'        --',
'        COALESCE(p.page_id, TO_NUMBER(REGEXP_SUBSTR(a.home_link, '':(\d+):&'' || ''SESSION\.'', 1, 1, NULL, 1))) AS page_id,',
'        --',
'        CASE',
'            WHEN a.availability_status LIKE ''Available%''        THEN NULL',
'            WHEN a.availability_status LIKE ''Restricted Access'' THEN NULL',
'            ELSE ''Y''',
'            END AS is_offline',
'    FROM apex_applications a',
'    LEFT JOIN apex_application_pages p',
'        ON p.application_id     = a.application_id',
'        AND a.home_link         LIKE ''%:'' || p.page_alias || '':%''',
')',
'SELECT',
'    a.app_id,',
'    NVL(p.app_name, a.app_name) AS app_name,',
'    p.app_alias,',
'    p.app_group,',
'    p.app_schema,',
'    --',
'    CASE WHEN p.page_id IS NOT NULL',
'        THEN app.get_page_link (',
'            in_page_id      => p.page_id,',
'            in_app_id       => a.app_id,',
'            in_session_id   => CASE WHEN a.app_id = app.get_core_app_id() THEN 0 END',
'        ) END AS app_url,',
'    --',
'    p.app_version,',
'    p.authentication_scheme,',
'    p.last_updated_on,',
'    p.count_pages,',
'    --',
'    a.is_active,',
'    a.is_visible,',
'    --',
'    CASE WHEN',
'        p.app_schema                IS NOT NULL',
'        AND (',
'            a.is_visible            = ''Y''',
'            OR a.app_id IN (',
'                SELECT r.app_id',
'                FROM user_roles r',
'                WHERE r.user_id     = app.get_user_id()',
'            )',
'        )',
'        AND (',
'            app.is_developer_y()    = ''Y''',
'            OR a.app_id             != app.get_core_app_id()',
'        )',
'        THEN ''Y'' END AS is_available,',
'    --',
'    p.is_offline,',
'    a.description_,',
'    a.message,',
'    NULL                AS action,',
'    a.app_id            AS action_id',
'FROM apps a',
'LEFT JOIN p',
'    ON p.app_id = a.app_id',
'UNION ALL',
'--',
'SELECT',
'    p.app_id,',
'    p.app_name,',
'    p.app_alias,',
'    p.app_group,',
'    p.app_schema,',
'    --',
'    app.get_page_link (',
'        in_page_id      => p.page_id,',
'        in_app_id       => p.app_id',
'    ) AS app_url,',
'    --',
'    p.app_version,',
'    p.authentication_scheme,',
'    p.last_updated_on,',
'    p.count_pages,',
'    --',
'    NULL AS is_active,',
'    NULL AS is_visible,',
'    NULL AS is_available,',
'    p.is_offline,',
'    --',
'    NULL AS description_,',
'    NULL AS message,',
'    --',
'    app.get_icon(''fa-plus-square'', ''Create new record'') AS action,',
'    p.app_id                                            AS action_id',
'FROM p',
'LEFT JOIN apps a',
'    ON a.app_id         = p.app_id',
'WHERE a.app_id          IS NULL;',
'',
'CREATE OR REPLACE FORCE VIEW "USERS_OVERVIEW" ("USER_ID", "USER_LOGIN", "USER_NAME", "LANG_ID", "IS_ACTIVE", "IS_DEV", "COUNT_SESSIONS", "COUNT_REQUESTS", "COUNT_LOGS", "COUNT_ERRORS", "COUNT_EVENTS", "COUNT_ROLES", "UPDATED_BY", "UPDATED_AT") AS ',
'  WITH x AS (',
'    SELECT',
'        app.get_app_id()    AS app_id,',
'        app.get_user_id()   AS user_id,',
'        --',
'        TRUNC(NVL(app.get_date_item(''G_TODAY''), SYSDATE))                       AS today,',
'        CAST(TRUNC(NVL(app.get_date_item(''G_TODAY''), SYSDATE)) AS TIMESTAMP)    AS today_ts',
'    FROM users u',
'    WHERE u.user_id         = app.get_user_id()',
'),',
's AS (',
'    SELECT',
'        s.user_id,',
'        COUNT(*)            AS count_sessions',
'    FROM sessions s',
'    JOIN x',
'        ON x.app_id         = s.app_id',
'        AND s.created_at    >= x.today',
'        AND s.created_at    < x.today + 1',
'    GROUP BY s.user_id',
'),',
'l AS (',
'    SELECT',
'        l.user_id,',
'        SUM(CASE WHEN l.flag = ''P'' THEN 1 ELSE 0 END)               AS count_requests,',
'        COUNT(*)                                                    AS count_logs,',
'        NULLIF(SUM(CASE WHEN l.flag = ''E'' THEN 1 ELSE 0 END), 0)    AS count_errors',
'    FROM logs l',
'    JOIN x',
'        ON x.app_id         = l.app_id',
'        AND l.created_at    >= x.today_ts',
'        AND l.created_at    < x.today_ts + 1',
'    GROUP BY l.user_id',
'),',
'r AS (',
'    SELECT',
'        r.user_id,',
'        NULLIF(COUNT(*), 0) AS count_roles',
'    FROM user_roles r',
'    JOIN x',
'        ON x.app_id         = r.app_id',
'    GROUP BY r.user_id',
'),',
'b AS (',
'    SELECT',
'        l.user_id,',
'        NULLIF(COUNT(*), 0) AS count_events',
'    FROM log_events l',
'    JOIN x',
'        ON x.app_id         = l.app_id',
'        AND l.created_at    >= x.today_ts',
'        AND l.created_at    < x.today_ts + 1',
'    GROUP BY l.user_id',
')',
'SELECT',
'    u.user_id,',
'    u.user_login,',
'    u.user_name,',
'    u.lang_id,',
'    u.is_active,',
'    --',
'    CASE',
'        WHEN (app.is_developer_y(u.user_id) = ''Y'' OR app.is_developer_y(u.user_login) = ''Y'')',
'            THEN ''Y''',
'        END AS is_dev,',
'    --',
'    s.count_sessions,',
'    l.count_requests,',
'    l.count_logs,',
'    l.count_errors,',
'    b.count_events,',
'    r.count_roles,',
'    --',
'    u.updated_by,',
'    u.updated_at',
'FROM users u',
'LEFT JOIN s ON s.user_id = u.user_id',
'LEFT JOIN l ON l.user_id = u.user_id',
'LEFT JOIN r ON r.user_id = u.user_id',
'LEFT JOIN b ON b.user_id = u.user_id',
'WHERE u.user_id = NVL(app.get_item(''$USER_ID''), u.user_id)',
'    AND (',
'        u.user_id IN (',
'            SELECT r.user_id',
'            FROM user_roles r',
'            WHERE r.role_id = app.get_item(''$ROLE_ID'')',
'        )',
'        OR app.get_item(''$ROLE_ID'') IS NULL',
'    );',
'',
''))
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20443083882321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'DASHBOARD_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20443247879321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'EVENTS_CHART'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20443473077321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'GRANTS_OBJECTS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20443693369321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'GRANTS_PRIVILEGES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20443847078321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'LOGS_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20444012259321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'LOGS_TREE'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20444226560321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'NAV_BADGES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20444408871321463)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'NAV_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20444647355321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'NAV_PAGES_TO_ADD'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20444899434321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'NAV_PAGES_TO_REMOVE'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20445098660321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'NAV_REGIONS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20445295643321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'NAV_TOP'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20445410487321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_COLUMNS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20445674426321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_CONSTRAINTS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20445889083321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_CONSTRAINTS_FIX_DT1'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20446081275321464)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_CONSTRAINTS_FIX_DT2'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20446210881321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_INDEXES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20446434456321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_INDEXES_MISSING'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20446673597321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_MODULES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20446864636321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20447008239321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_PACKAGES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20447282429321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_PARTITIONS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20447499206321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_TABLES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20447621391321465)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_TABLES_REF_DOWN'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20447816834321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_TABLES_REF_OBJECTS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20448094491321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_TABLES_REF_PAGES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20448225356321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_TABLES_REF_UP'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20448414858321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_TRIGGERS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20448610904321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'OBJ_VIEWS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20448818325321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'ROLES_AUTH_SCHEMES'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20449045216321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'ROLES_CARDS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20449265022321466)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'ROLES_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20449473040321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'SCHEDULER_DETAILS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20449676714321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'SCHEDULER_PLANNED'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20449885393321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'SCHEDULER_RUNNING'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20450027852321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'SESSIONS_CHART'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20450243126321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'SESSIONS_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20450432061321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'SETTINGS_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20450677422321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'USERS_APPS'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.create_install_object(
 p_id=>wwv_flow_api.id(20450875648321467)
,p_script_id=>wwv_flow_api.id(20442967958321458)
,p_object_owner=>'#OWNER#'
,p_object_type=>'VIEW'
,p_object_name=>'USERS_OVERVIEW'
,p_last_updated_by=>'DEV'
,p_last_updated_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
,p_created_by=>'DEV'
,p_created_on=>to_date('20220123180235','YYYYMMDDHH24MISS')
);
wwv_flow_api.component_end;
end;
/
